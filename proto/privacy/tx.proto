syntax = "proto3";
package privacy.privacy;

import "privacy/serial_number.proto";
import "privacy/output_coin.proto";
import "privacy/commitment.proto";
import "privacy/commitment_index.proto";
import "privacy/token.proto";
import "privacy/onetime_address.proto";
import "privacy/tx_privacy_data.proto";
import "privacy/output_coin_serial_number.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "privacy/x/privacy/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateSerialNumber(MsgCreateSerialNumber) returns (MsgCreateSerialNumberResponse);
  rpc UpdateSerialNumber(MsgUpdateSerialNumber) returns (MsgUpdateSerialNumberResponse);
  rpc DeleteSerialNumber(MsgDeleteSerialNumber) returns (MsgDeleteSerialNumberResponse);
  rpc CreateOutputCoin(MsgCreateOutputCoin) returns (MsgCreateOutputCoinResponse);
  rpc UpdateOutputCoin(MsgUpdateOutputCoin) returns (MsgUpdateOutputCoinResponse);
  rpc DeleteOutputCoin(MsgDeleteOutputCoin) returns (MsgDeleteOutputCoinResponse);
  rpc CreateCommitment(MsgCreateCommitment) returns (MsgCreateCommitmentResponse);
  rpc UpdateCommitment(MsgUpdateCommitment) returns (MsgUpdateCommitmentResponse);
  rpc DeleteCommitment(MsgDeleteCommitment) returns (MsgDeleteCommitmentResponse);
  rpc CreateCommitmentIndex(MsgCreateCommitmentIndex) returns (MsgCreateCommitmentIndexResponse);
  rpc UpdateCommitmentIndex(MsgUpdateCommitmentIndex) returns (MsgUpdateCommitmentIndexResponse);
  rpc DeleteCommitmentIndex(MsgDeleteCommitmentIndex) returns (MsgDeleteCommitmentIndexResponse);
  rpc CreateToken(MsgCreateToken) returns (MsgCreateTokenResponse);
  rpc UpdateToken(MsgUpdateToken) returns (MsgUpdateTokenResponse);
  rpc DeleteToken(MsgDeleteToken) returns (MsgDeleteTokenResponse);
  rpc CreateOnetimeAddress(MsgCreateOnetimeAddress) returns (MsgCreateOnetimeAddressResponse);
  rpc UpdateOnetimeAddress(MsgUpdateOnetimeAddress) returns (MsgUpdateOnetimeAddressResponse);
  rpc DeleteOnetimeAddress(MsgDeleteOnetimeAddress) returns (MsgDeleteOnetimeAddressResponse);
  rpc CreateTx(MsgCreateTx) returns (MsgCreateTxResponse);
  rpc CreateTxPrivacyData(MsgCreateTxPrivacyData) returns (MsgCreateTxPrivacyDataResponse);
  rpc UpdateTxPrivacyData(MsgUpdateTxPrivacyData) returns (MsgUpdateTxPrivacyDataResponse);
  rpc DeleteTxPrivacyData(MsgDeleteTxPrivacyData) returns (MsgDeleteTxPrivacyDataResponse);
  rpc Airdrop(MsgAirdrop) returns (MsgAirdropResponse);
  rpc Transfer(MsgTransfer) returns (MsgTransferResponse);
  rpc CreateOutputCoinSerialNumber(MsgCreateOutputCoinSerialNumber) returns (MsgCreateOutputCoinSerialNumberResponse);
  rpc UpdateOutputCoinSerialNumber(MsgUpdateOutputCoinSerialNumber) returns (MsgUpdateOutputCoinSerialNumberResponse);
  rpc DeleteOutputCoinSerialNumber(MsgDeleteOutputCoinSerialNumber) returns (MsgDeleteOutputCoinSerialNumberResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateSerialNumber {
  string creator = 1;
  string index = 2;

}
message MsgCreateSerialNumberResponse {}

message MsgUpdateSerialNumber {
  string creator = 1;
  string index = 2;

}
message MsgUpdateSerialNumberResponse {}

message MsgDeleteSerialNumber {
  string creator = 1;
  string index = 2;
}
message MsgDeleteSerialNumberResponse {}

message MsgCreateOutputCoin {
  string creator = 1;
  string index = 2;

}
message MsgCreateOutputCoinResponse {}

message MsgUpdateOutputCoin {
  string creator = 1;
  string index = 2;

}
message MsgUpdateOutputCoinResponse {}

message MsgDeleteOutputCoin {
  string creator = 1;
  string index = 2;
}
message MsgDeleteOutputCoinResponse {}

message MsgCreateCommitment {
  string creator = 1;
  string index = 2;

}
message MsgCreateCommitmentResponse {}

message MsgUpdateCommitment {
  string creator = 1;
  string index = 2;

}
message MsgUpdateCommitmentResponse {}

message MsgDeleteCommitment {
  string creator = 1;
  string index = 2;
}
message MsgDeleteCommitmentResponse {}

message MsgCreateCommitmentIndex {
  string creator = 1;
  string index = 2;

}
message MsgCreateCommitmentIndexResponse {}

message MsgUpdateCommitmentIndex {
  string creator = 1;
  string index = 2;

}
message MsgUpdateCommitmentIndexResponse {}

message MsgDeleteCommitmentIndex {
  string creator = 1;
  string index = 2;
}
message MsgDeleteCommitmentIndexResponse {}

message MsgCreateToken {
  string creator = 1;
  string index = 2;

}
message MsgCreateTokenResponse {}

message MsgUpdateToken {
  string creator = 1;
  string index = 2;

}
message MsgUpdateTokenResponse {}

message MsgDeleteToken {
  string creator = 1;
  string index = 2;
}
message MsgDeleteTokenResponse {}

message MsgCreateOnetimeAddress {
  string creator = 1;
  string index = 2;

}
message MsgCreateOnetimeAddressResponse {}

message MsgUpdateOnetimeAddress {
  string creator = 1;
  string index = 2;

}
message MsgUpdateOnetimeAddressResponse {}

message MsgDeleteOnetimeAddress {
  string creator = 1;
  string index = 2;
}
message MsgDeleteOnetimeAddressResponse {}

message MsgCreateTx {
  bytes value = 1;
}

message MsgCreateTxResponse {
}

message MsgCreateTxPrivacyData {
  string creator = 1;
  string index = 2;

}
message MsgCreateTxPrivacyDataResponse {}

message MsgUpdateTxPrivacyData {
  string creator = 1;
  string index = 2;

}
message MsgUpdateTxPrivacyDataResponse {}

message MsgDeleteTxPrivacyData {
  string creator = 1;
  string index = 2;
}
message MsgDeleteTxPrivacyDataResponse {}

message MsgAirdrop {
  string ota_receiver = 2;
  bytes amount = 3;
  bytes info = 4;
}

message MsgAirdropResponse {
}

message MsgTransfer {
  string private_key = 1;
  message PaymentInfo {
    string payment_address = 1;
    uint64 amount = 2;
    bytes info = 3;
  }
  repeated PaymentInfo payment_infos = 2;
}

message MsgTransferResponse {
  string msg = 1;
  bool is_error = 2;
}

message MsgCreateOutputCoinSerialNumber {
  string creator = 1;
}
message MsgCreateOutputCoinSerialNumberResponse {}

message MsgUpdateOutputCoinSerialNumber {
  string creator = 1;
}
message MsgUpdateOutputCoinSerialNumberResponse {}

message MsgDeleteOutputCoinSerialNumber {
  string creator = 1;
}
message MsgDeleteOutputCoinSerialNumberResponse {}
// this line is used by starport scaffolding # proto/tx/message
