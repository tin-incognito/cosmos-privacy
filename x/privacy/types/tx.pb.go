// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: privacy/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateSerialNumber struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateSerialNumber) Reset()         { *m = MsgCreateSerialNumber{} }
func (m *MsgCreateSerialNumber) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSerialNumber) ProtoMessage()    {}
func (*MsgCreateSerialNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{0}
}
func (m *MsgCreateSerialNumber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSerialNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSerialNumber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSerialNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSerialNumber.Merge(m, src)
}
func (m *MsgCreateSerialNumber) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSerialNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSerialNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSerialNumber proto.InternalMessageInfo

func (m *MsgCreateSerialNumber) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSerialNumber) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateSerialNumberResponse struct {
}

func (m *MsgCreateSerialNumberResponse) Reset()         { *m = MsgCreateSerialNumberResponse{} }
func (m *MsgCreateSerialNumberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSerialNumberResponse) ProtoMessage()    {}
func (*MsgCreateSerialNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{1}
}
func (m *MsgCreateSerialNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSerialNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSerialNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSerialNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSerialNumberResponse.Merge(m, src)
}
func (m *MsgCreateSerialNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSerialNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSerialNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSerialNumberResponse proto.InternalMessageInfo

type MsgUpdateSerialNumber struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateSerialNumber) Reset()         { *m = MsgUpdateSerialNumber{} }
func (m *MsgUpdateSerialNumber) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSerialNumber) ProtoMessage()    {}
func (*MsgUpdateSerialNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{2}
}
func (m *MsgUpdateSerialNumber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSerialNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSerialNumber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSerialNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSerialNumber.Merge(m, src)
}
func (m *MsgUpdateSerialNumber) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSerialNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSerialNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSerialNumber proto.InternalMessageInfo

func (m *MsgUpdateSerialNumber) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSerialNumber) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateSerialNumberResponse struct {
}

func (m *MsgUpdateSerialNumberResponse) Reset()         { *m = MsgUpdateSerialNumberResponse{} }
func (m *MsgUpdateSerialNumberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSerialNumberResponse) ProtoMessage()    {}
func (*MsgUpdateSerialNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{3}
}
func (m *MsgUpdateSerialNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSerialNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSerialNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSerialNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSerialNumberResponse.Merge(m, src)
}
func (m *MsgUpdateSerialNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSerialNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSerialNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSerialNumberResponse proto.InternalMessageInfo

type MsgDeleteSerialNumber struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteSerialNumber) Reset()         { *m = MsgDeleteSerialNumber{} }
func (m *MsgDeleteSerialNumber) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSerialNumber) ProtoMessage()    {}
func (*MsgDeleteSerialNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{4}
}
func (m *MsgDeleteSerialNumber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSerialNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSerialNumber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSerialNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSerialNumber.Merge(m, src)
}
func (m *MsgDeleteSerialNumber) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSerialNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSerialNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSerialNumber proto.InternalMessageInfo

func (m *MsgDeleteSerialNumber) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSerialNumber) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteSerialNumberResponse struct {
}

func (m *MsgDeleteSerialNumberResponse) Reset()         { *m = MsgDeleteSerialNumberResponse{} }
func (m *MsgDeleteSerialNumberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSerialNumberResponse) ProtoMessage()    {}
func (*MsgDeleteSerialNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{5}
}
func (m *MsgDeleteSerialNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSerialNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSerialNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSerialNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSerialNumberResponse.Merge(m, src)
}
func (m *MsgDeleteSerialNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSerialNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSerialNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSerialNumberResponse proto.InternalMessageInfo

type MsgCreateOutputCoin struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateOutputCoin) Reset()         { *m = MsgCreateOutputCoin{} }
func (m *MsgCreateOutputCoin) String() string { return proto.CompactTextString(m) }
func (*MsgCreateOutputCoin) ProtoMessage()    {}
func (*MsgCreateOutputCoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{6}
}
func (m *MsgCreateOutputCoin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateOutputCoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateOutputCoin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateOutputCoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateOutputCoin.Merge(m, src)
}
func (m *MsgCreateOutputCoin) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateOutputCoin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateOutputCoin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateOutputCoin proto.InternalMessageInfo

func (m *MsgCreateOutputCoin) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateOutputCoin) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateOutputCoinResponse struct {
}

func (m *MsgCreateOutputCoinResponse) Reset()         { *m = MsgCreateOutputCoinResponse{} }
func (m *MsgCreateOutputCoinResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateOutputCoinResponse) ProtoMessage()    {}
func (*MsgCreateOutputCoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{7}
}
func (m *MsgCreateOutputCoinResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateOutputCoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateOutputCoinResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateOutputCoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateOutputCoinResponse.Merge(m, src)
}
func (m *MsgCreateOutputCoinResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateOutputCoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateOutputCoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateOutputCoinResponse proto.InternalMessageInfo

type MsgUpdateOutputCoin struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateOutputCoin) Reset()         { *m = MsgUpdateOutputCoin{} }
func (m *MsgUpdateOutputCoin) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOutputCoin) ProtoMessage()    {}
func (*MsgUpdateOutputCoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{8}
}
func (m *MsgUpdateOutputCoin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOutputCoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOutputCoin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOutputCoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOutputCoin.Merge(m, src)
}
func (m *MsgUpdateOutputCoin) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOutputCoin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOutputCoin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOutputCoin proto.InternalMessageInfo

func (m *MsgUpdateOutputCoin) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateOutputCoin) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateOutputCoinResponse struct {
}

func (m *MsgUpdateOutputCoinResponse) Reset()         { *m = MsgUpdateOutputCoinResponse{} }
func (m *MsgUpdateOutputCoinResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOutputCoinResponse) ProtoMessage()    {}
func (*MsgUpdateOutputCoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{9}
}
func (m *MsgUpdateOutputCoinResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOutputCoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOutputCoinResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOutputCoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOutputCoinResponse.Merge(m, src)
}
func (m *MsgUpdateOutputCoinResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOutputCoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOutputCoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOutputCoinResponse proto.InternalMessageInfo

type MsgDeleteOutputCoin struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteOutputCoin) Reset()         { *m = MsgDeleteOutputCoin{} }
func (m *MsgDeleteOutputCoin) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteOutputCoin) ProtoMessage()    {}
func (*MsgDeleteOutputCoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{10}
}
func (m *MsgDeleteOutputCoin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteOutputCoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteOutputCoin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteOutputCoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteOutputCoin.Merge(m, src)
}
func (m *MsgDeleteOutputCoin) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteOutputCoin) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteOutputCoin.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteOutputCoin proto.InternalMessageInfo

func (m *MsgDeleteOutputCoin) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteOutputCoin) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteOutputCoinResponse struct {
}

func (m *MsgDeleteOutputCoinResponse) Reset()         { *m = MsgDeleteOutputCoinResponse{} }
func (m *MsgDeleteOutputCoinResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteOutputCoinResponse) ProtoMessage()    {}
func (*MsgDeleteOutputCoinResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{11}
}
func (m *MsgDeleteOutputCoinResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteOutputCoinResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteOutputCoinResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteOutputCoinResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteOutputCoinResponse.Merge(m, src)
}
func (m *MsgDeleteOutputCoinResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteOutputCoinResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteOutputCoinResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteOutputCoinResponse proto.InternalMessageInfo

type MsgCreateCommitment struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateCommitment) Reset()         { *m = MsgCreateCommitment{} }
func (m *MsgCreateCommitment) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCommitment) ProtoMessage()    {}
func (*MsgCreateCommitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{12}
}
func (m *MsgCreateCommitment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCommitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCommitment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCommitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCommitment.Merge(m, src)
}
func (m *MsgCreateCommitment) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCommitment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCommitment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCommitment proto.InternalMessageInfo

func (m *MsgCreateCommitment) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCommitment) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateCommitmentResponse struct {
}

func (m *MsgCreateCommitmentResponse) Reset()         { *m = MsgCreateCommitmentResponse{} }
func (m *MsgCreateCommitmentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCommitmentResponse) ProtoMessage()    {}
func (*MsgCreateCommitmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{13}
}
func (m *MsgCreateCommitmentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCommitmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCommitmentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCommitmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCommitmentResponse.Merge(m, src)
}
func (m *MsgCreateCommitmentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCommitmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCommitmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCommitmentResponse proto.InternalMessageInfo

type MsgUpdateCommitment struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateCommitment) Reset()         { *m = MsgUpdateCommitment{} }
func (m *MsgUpdateCommitment) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCommitment) ProtoMessage()    {}
func (*MsgUpdateCommitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{14}
}
func (m *MsgUpdateCommitment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCommitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCommitment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCommitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCommitment.Merge(m, src)
}
func (m *MsgUpdateCommitment) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCommitment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCommitment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCommitment proto.InternalMessageInfo

func (m *MsgUpdateCommitment) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateCommitment) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateCommitmentResponse struct {
}

func (m *MsgUpdateCommitmentResponse) Reset()         { *m = MsgUpdateCommitmentResponse{} }
func (m *MsgUpdateCommitmentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCommitmentResponse) ProtoMessage()    {}
func (*MsgUpdateCommitmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{15}
}
func (m *MsgUpdateCommitmentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCommitmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCommitmentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCommitmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCommitmentResponse.Merge(m, src)
}
func (m *MsgUpdateCommitmentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCommitmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCommitmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCommitmentResponse proto.InternalMessageInfo

type MsgDeleteCommitment struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteCommitment) Reset()         { *m = MsgDeleteCommitment{} }
func (m *MsgDeleteCommitment) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCommitment) ProtoMessage()    {}
func (*MsgDeleteCommitment) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{16}
}
func (m *MsgDeleteCommitment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCommitment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCommitment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCommitment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCommitment.Merge(m, src)
}
func (m *MsgDeleteCommitment) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCommitment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCommitment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCommitment proto.InternalMessageInfo

func (m *MsgDeleteCommitment) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteCommitment) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteCommitmentResponse struct {
}

func (m *MsgDeleteCommitmentResponse) Reset()         { *m = MsgDeleteCommitmentResponse{} }
func (m *MsgDeleteCommitmentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCommitmentResponse) ProtoMessage()    {}
func (*MsgDeleteCommitmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{17}
}
func (m *MsgDeleteCommitmentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCommitmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCommitmentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCommitmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCommitmentResponse.Merge(m, src)
}
func (m *MsgDeleteCommitmentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCommitmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCommitmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCommitmentResponse proto.InternalMessageInfo

type MsgCreateCommitmentIndex struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateCommitmentIndex) Reset()         { *m = MsgCreateCommitmentIndex{} }
func (m *MsgCreateCommitmentIndex) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCommitmentIndex) ProtoMessage()    {}
func (*MsgCreateCommitmentIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{18}
}
func (m *MsgCreateCommitmentIndex) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCommitmentIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCommitmentIndex.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCommitmentIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCommitmentIndex.Merge(m, src)
}
func (m *MsgCreateCommitmentIndex) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCommitmentIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCommitmentIndex.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCommitmentIndex proto.InternalMessageInfo

func (m *MsgCreateCommitmentIndex) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCommitmentIndex) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateCommitmentIndexResponse struct {
}

func (m *MsgCreateCommitmentIndexResponse) Reset()         { *m = MsgCreateCommitmentIndexResponse{} }
func (m *MsgCreateCommitmentIndexResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCommitmentIndexResponse) ProtoMessage()    {}
func (*MsgCreateCommitmentIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{19}
}
func (m *MsgCreateCommitmentIndexResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCommitmentIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCommitmentIndexResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCommitmentIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCommitmentIndexResponse.Merge(m, src)
}
func (m *MsgCreateCommitmentIndexResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCommitmentIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCommitmentIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCommitmentIndexResponse proto.InternalMessageInfo

type MsgUpdateCommitmentIndex struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateCommitmentIndex) Reset()         { *m = MsgUpdateCommitmentIndex{} }
func (m *MsgUpdateCommitmentIndex) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCommitmentIndex) ProtoMessage()    {}
func (*MsgUpdateCommitmentIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{20}
}
func (m *MsgUpdateCommitmentIndex) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCommitmentIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCommitmentIndex.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCommitmentIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCommitmentIndex.Merge(m, src)
}
func (m *MsgUpdateCommitmentIndex) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCommitmentIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCommitmentIndex.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCommitmentIndex proto.InternalMessageInfo

func (m *MsgUpdateCommitmentIndex) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateCommitmentIndex) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateCommitmentIndexResponse struct {
}

func (m *MsgUpdateCommitmentIndexResponse) Reset()         { *m = MsgUpdateCommitmentIndexResponse{} }
func (m *MsgUpdateCommitmentIndexResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCommitmentIndexResponse) ProtoMessage()    {}
func (*MsgUpdateCommitmentIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{21}
}
func (m *MsgUpdateCommitmentIndexResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCommitmentIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCommitmentIndexResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCommitmentIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCommitmentIndexResponse.Merge(m, src)
}
func (m *MsgUpdateCommitmentIndexResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCommitmentIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCommitmentIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCommitmentIndexResponse proto.InternalMessageInfo

type MsgDeleteCommitmentIndex struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteCommitmentIndex) Reset()         { *m = MsgDeleteCommitmentIndex{} }
func (m *MsgDeleteCommitmentIndex) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCommitmentIndex) ProtoMessage()    {}
func (*MsgDeleteCommitmentIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{22}
}
func (m *MsgDeleteCommitmentIndex) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCommitmentIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCommitmentIndex.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCommitmentIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCommitmentIndex.Merge(m, src)
}
func (m *MsgDeleteCommitmentIndex) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCommitmentIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCommitmentIndex.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCommitmentIndex proto.InternalMessageInfo

func (m *MsgDeleteCommitmentIndex) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteCommitmentIndex) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteCommitmentIndexResponse struct {
}

func (m *MsgDeleteCommitmentIndexResponse) Reset()         { *m = MsgDeleteCommitmentIndexResponse{} }
func (m *MsgDeleteCommitmentIndexResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCommitmentIndexResponse) ProtoMessage()    {}
func (*MsgDeleteCommitmentIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{23}
}
func (m *MsgDeleteCommitmentIndexResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCommitmentIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCommitmentIndexResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCommitmentIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCommitmentIndexResponse.Merge(m, src)
}
func (m *MsgDeleteCommitmentIndexResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCommitmentIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCommitmentIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCommitmentIndexResponse proto.InternalMessageInfo

type MsgCreateToken struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateToken) Reset()         { *m = MsgCreateToken{} }
func (m *MsgCreateToken) String() string { return proto.CompactTextString(m) }
func (*MsgCreateToken) ProtoMessage()    {}
func (*MsgCreateToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{24}
}
func (m *MsgCreateToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateToken.Merge(m, src)
}
func (m *MsgCreateToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateToken proto.InternalMessageInfo

func (m *MsgCreateToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateToken) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateTokenResponse struct {
}

func (m *MsgCreateTokenResponse) Reset()         { *m = MsgCreateTokenResponse{} }
func (m *MsgCreateTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTokenResponse) ProtoMessage()    {}
func (*MsgCreateTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{25}
}
func (m *MsgCreateTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTokenResponse.Merge(m, src)
}
func (m *MsgCreateTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTokenResponse proto.InternalMessageInfo

type MsgUpdateToken struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateToken) Reset()         { *m = MsgUpdateToken{} }
func (m *MsgUpdateToken) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateToken) ProtoMessage()    {}
func (*MsgUpdateToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{26}
}
func (m *MsgUpdateToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateToken.Merge(m, src)
}
func (m *MsgUpdateToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateToken proto.InternalMessageInfo

func (m *MsgUpdateToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateToken) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateTokenResponse struct {
}

func (m *MsgUpdateTokenResponse) Reset()         { *m = MsgUpdateTokenResponse{} }
func (m *MsgUpdateTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTokenResponse) ProtoMessage()    {}
func (*MsgUpdateTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{27}
}
func (m *MsgUpdateTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTokenResponse.Merge(m, src)
}
func (m *MsgUpdateTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTokenResponse proto.InternalMessageInfo

type MsgDeleteToken struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteToken) Reset()         { *m = MsgDeleteToken{} }
func (m *MsgDeleteToken) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteToken) ProtoMessage()    {}
func (*MsgDeleteToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{28}
}
func (m *MsgDeleteToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteToken.Merge(m, src)
}
func (m *MsgDeleteToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteToken proto.InternalMessageInfo

func (m *MsgDeleteToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteToken) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteTokenResponse struct {
}

func (m *MsgDeleteTokenResponse) Reset()         { *m = MsgDeleteTokenResponse{} }
func (m *MsgDeleteTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTokenResponse) ProtoMessage()    {}
func (*MsgDeleteTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{29}
}
func (m *MsgDeleteTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTokenResponse.Merge(m, src)
}
func (m *MsgDeleteTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTokenResponse proto.InternalMessageInfo

type MsgCreateOnetimeAddress struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateOnetimeAddress) Reset()         { *m = MsgCreateOnetimeAddress{} }
func (m *MsgCreateOnetimeAddress) String() string { return proto.CompactTextString(m) }
func (*MsgCreateOnetimeAddress) ProtoMessage()    {}
func (*MsgCreateOnetimeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{30}
}
func (m *MsgCreateOnetimeAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateOnetimeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateOnetimeAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateOnetimeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateOnetimeAddress.Merge(m, src)
}
func (m *MsgCreateOnetimeAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateOnetimeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateOnetimeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateOnetimeAddress proto.InternalMessageInfo

func (m *MsgCreateOnetimeAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateOnetimeAddress) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateOnetimeAddressResponse struct {
}

func (m *MsgCreateOnetimeAddressResponse) Reset()         { *m = MsgCreateOnetimeAddressResponse{} }
func (m *MsgCreateOnetimeAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateOnetimeAddressResponse) ProtoMessage()    {}
func (*MsgCreateOnetimeAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{31}
}
func (m *MsgCreateOnetimeAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateOnetimeAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateOnetimeAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateOnetimeAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateOnetimeAddressResponse.Merge(m, src)
}
func (m *MsgCreateOnetimeAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateOnetimeAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateOnetimeAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateOnetimeAddressResponse proto.InternalMessageInfo

type MsgUpdateOnetimeAddress struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateOnetimeAddress) Reset()         { *m = MsgUpdateOnetimeAddress{} }
func (m *MsgUpdateOnetimeAddress) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOnetimeAddress) ProtoMessage()    {}
func (*MsgUpdateOnetimeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{32}
}
func (m *MsgUpdateOnetimeAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOnetimeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOnetimeAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOnetimeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOnetimeAddress.Merge(m, src)
}
func (m *MsgUpdateOnetimeAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOnetimeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOnetimeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOnetimeAddress proto.InternalMessageInfo

func (m *MsgUpdateOnetimeAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateOnetimeAddress) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateOnetimeAddressResponse struct {
}

func (m *MsgUpdateOnetimeAddressResponse) Reset()         { *m = MsgUpdateOnetimeAddressResponse{} }
func (m *MsgUpdateOnetimeAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOnetimeAddressResponse) ProtoMessage()    {}
func (*MsgUpdateOnetimeAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{33}
}
func (m *MsgUpdateOnetimeAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOnetimeAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOnetimeAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOnetimeAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOnetimeAddressResponse.Merge(m, src)
}
func (m *MsgUpdateOnetimeAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOnetimeAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOnetimeAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOnetimeAddressResponse proto.InternalMessageInfo

type MsgDeleteOnetimeAddress struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteOnetimeAddress) Reset()         { *m = MsgDeleteOnetimeAddress{} }
func (m *MsgDeleteOnetimeAddress) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteOnetimeAddress) ProtoMessage()    {}
func (*MsgDeleteOnetimeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{34}
}
func (m *MsgDeleteOnetimeAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteOnetimeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteOnetimeAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteOnetimeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteOnetimeAddress.Merge(m, src)
}
func (m *MsgDeleteOnetimeAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteOnetimeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteOnetimeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteOnetimeAddress proto.InternalMessageInfo

func (m *MsgDeleteOnetimeAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteOnetimeAddress) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteOnetimeAddressResponse struct {
}

func (m *MsgDeleteOnetimeAddressResponse) Reset()         { *m = MsgDeleteOnetimeAddressResponse{} }
func (m *MsgDeleteOnetimeAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteOnetimeAddressResponse) ProtoMessage()    {}
func (*MsgDeleteOnetimeAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{35}
}
func (m *MsgDeleteOnetimeAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteOnetimeAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteOnetimeAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteOnetimeAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteOnetimeAddressResponse.Merge(m, src)
}
func (m *MsgDeleteOnetimeAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteOnetimeAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteOnetimeAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteOnetimeAddressResponse proto.InternalMessageInfo

type MsgCreateTx struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *MsgCreateTx) Reset()         { *m = MsgCreateTx{} }
func (m *MsgCreateTx) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTx) ProtoMessage()    {}
func (*MsgCreateTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{36}
}
func (m *MsgCreateTx) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTx.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTx.Merge(m, src)
}
func (m *MsgCreateTx) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTx) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTx.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTx proto.InternalMessageInfo

func (m *MsgCreateTx) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type MsgCreateTxResponse struct {
}

func (m *MsgCreateTxResponse) Reset()         { *m = MsgCreateTxResponse{} }
func (m *MsgCreateTxResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTxResponse) ProtoMessage()    {}
func (*MsgCreateTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{37}
}
func (m *MsgCreateTxResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTxResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTxResponse.Merge(m, src)
}
func (m *MsgCreateTxResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTxResponse proto.InternalMessageInfo

type MsgCreateTxPrivacyData struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgCreateTxPrivacyData) Reset()         { *m = MsgCreateTxPrivacyData{} }
func (m *MsgCreateTxPrivacyData) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTxPrivacyData) ProtoMessage()    {}
func (*MsgCreateTxPrivacyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{38}
}
func (m *MsgCreateTxPrivacyData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTxPrivacyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTxPrivacyData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTxPrivacyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTxPrivacyData.Merge(m, src)
}
func (m *MsgCreateTxPrivacyData) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTxPrivacyData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTxPrivacyData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTxPrivacyData proto.InternalMessageInfo

func (m *MsgCreateTxPrivacyData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTxPrivacyData) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgCreateTxPrivacyDataResponse struct {
}

func (m *MsgCreateTxPrivacyDataResponse) Reset()         { *m = MsgCreateTxPrivacyDataResponse{} }
func (m *MsgCreateTxPrivacyDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTxPrivacyDataResponse) ProtoMessage()    {}
func (*MsgCreateTxPrivacyDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{39}
}
func (m *MsgCreateTxPrivacyDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTxPrivacyDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTxPrivacyDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTxPrivacyDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTxPrivacyDataResponse.Merge(m, src)
}
func (m *MsgCreateTxPrivacyDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTxPrivacyDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTxPrivacyDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTxPrivacyDataResponse proto.InternalMessageInfo

type MsgUpdateTxPrivacyData struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgUpdateTxPrivacyData) Reset()         { *m = MsgUpdateTxPrivacyData{} }
func (m *MsgUpdateTxPrivacyData) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTxPrivacyData) ProtoMessage()    {}
func (*MsgUpdateTxPrivacyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{40}
}
func (m *MsgUpdateTxPrivacyData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTxPrivacyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTxPrivacyData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTxPrivacyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTxPrivacyData.Merge(m, src)
}
func (m *MsgUpdateTxPrivacyData) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTxPrivacyData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTxPrivacyData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTxPrivacyData proto.InternalMessageInfo

func (m *MsgUpdateTxPrivacyData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTxPrivacyData) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgUpdateTxPrivacyDataResponse struct {
}

func (m *MsgUpdateTxPrivacyDataResponse) Reset()         { *m = MsgUpdateTxPrivacyDataResponse{} }
func (m *MsgUpdateTxPrivacyDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTxPrivacyDataResponse) ProtoMessage()    {}
func (*MsgUpdateTxPrivacyDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{41}
}
func (m *MsgUpdateTxPrivacyDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTxPrivacyDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTxPrivacyDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTxPrivacyDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTxPrivacyDataResponse.Merge(m, src)
}
func (m *MsgUpdateTxPrivacyDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTxPrivacyDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTxPrivacyDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTxPrivacyDataResponse proto.InternalMessageInfo

type MsgDeleteTxPrivacyData struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgDeleteTxPrivacyData) Reset()         { *m = MsgDeleteTxPrivacyData{} }
func (m *MsgDeleteTxPrivacyData) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTxPrivacyData) ProtoMessage()    {}
func (*MsgDeleteTxPrivacyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{42}
}
func (m *MsgDeleteTxPrivacyData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTxPrivacyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTxPrivacyData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTxPrivacyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTxPrivacyData.Merge(m, src)
}
func (m *MsgDeleteTxPrivacyData) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTxPrivacyData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTxPrivacyData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTxPrivacyData proto.InternalMessageInfo

func (m *MsgDeleteTxPrivacyData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTxPrivacyData) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgDeleteTxPrivacyDataResponse struct {
}

func (m *MsgDeleteTxPrivacyDataResponse) Reset()         { *m = MsgDeleteTxPrivacyDataResponse{} }
func (m *MsgDeleteTxPrivacyDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTxPrivacyDataResponse) ProtoMessage()    {}
func (*MsgDeleteTxPrivacyDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{43}
}
func (m *MsgDeleteTxPrivacyDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTxPrivacyDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTxPrivacyDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTxPrivacyDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTxPrivacyDataResponse.Merge(m, src)
}
func (m *MsgDeleteTxPrivacyDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTxPrivacyDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTxPrivacyDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTxPrivacyDataResponse proto.InternalMessageInfo

type MsgAirdrop struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OtaReceiver string `protobuf:"bytes,2,opt,name=ota_receiver,json=otaReceiver,proto3" json:"ota_receiver,omitempty"`
	Amount      []byte `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Info        []byte `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *MsgAirdrop) Reset()         { *m = MsgAirdrop{} }
func (m *MsgAirdrop) String() string { return proto.CompactTextString(m) }
func (*MsgAirdrop) ProtoMessage()    {}
func (*MsgAirdrop) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{44}
}
func (m *MsgAirdrop) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAirdrop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAirdrop.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAirdrop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAirdrop.Merge(m, src)
}
func (m *MsgAirdrop) XXX_Size() int {
	return m.Size()
}
func (m *MsgAirdrop) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAirdrop.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAirdrop proto.InternalMessageInfo

func (m *MsgAirdrop) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAirdrop) GetOtaReceiver() string {
	if m != nil {
		return m.OtaReceiver
	}
	return ""
}

func (m *MsgAirdrop) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *MsgAirdrop) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type MsgAirdropResponse struct {
}

func (m *MsgAirdropResponse) Reset()         { *m = MsgAirdropResponse{} }
func (m *MsgAirdropResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAirdropResponse) ProtoMessage()    {}
func (*MsgAirdropResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{45}
}
func (m *MsgAirdropResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAirdropResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAirdropResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAirdropResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAirdropResponse.Merge(m, src)
}
func (m *MsgAirdropResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAirdropResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAirdropResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAirdropResponse proto.InternalMessageInfo

type MsgTransfer struct {
	Creator      string                     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PrivateKey   string                     `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PaymentInfos []*MsgTransfer_PaymentInfo `protobuf:"bytes,3,rep,name=payment_infos,json=paymentInfos,proto3" json:"payment_infos,omitempty"`
}

func (m *MsgTransfer) Reset()         { *m = MsgTransfer{} }
func (m *MsgTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgTransfer) ProtoMessage()    {}
func (*MsgTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{46}
}
func (m *MsgTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransfer.Merge(m, src)
}
func (m *MsgTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransfer proto.InternalMessageInfo

func (m *MsgTransfer) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgTransfer) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *MsgTransfer) GetPaymentInfos() []*MsgTransfer_PaymentInfo {
	if m != nil {
		return m.PaymentInfos
	}
	return nil
}

type MsgTransfer_PaymentInfo struct {
	PaymentAddress string `protobuf:"bytes,1,opt,name=payment_address,json=paymentAddress,proto3" json:"payment_address,omitempty"`
	Amount         uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Info           []byte `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (m *MsgTransfer_PaymentInfo) Reset()         { *m = MsgTransfer_PaymentInfo{} }
func (m *MsgTransfer_PaymentInfo) String() string { return proto.CompactTextString(m) }
func (*MsgTransfer_PaymentInfo) ProtoMessage()    {}
func (*MsgTransfer_PaymentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{46, 0}
}
func (m *MsgTransfer_PaymentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransfer_PaymentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransfer_PaymentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransfer_PaymentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransfer_PaymentInfo.Merge(m, src)
}
func (m *MsgTransfer_PaymentInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransfer_PaymentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransfer_PaymentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransfer_PaymentInfo proto.InternalMessageInfo

func (m *MsgTransfer_PaymentInfo) GetPaymentAddress() string {
	if m != nil {
		return m.PaymentAddress
	}
	return ""
}

func (m *MsgTransfer_PaymentInfo) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *MsgTransfer_PaymentInfo) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

type MsgTransferResponse struct {
	Msg     string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	IsError bool   `protobuf:"varint,2,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
}

func (m *MsgTransferResponse) Reset()         { *m = MsgTransferResponse{} }
func (m *MsgTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferResponse) ProtoMessage()    {}
func (*MsgTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{47}
}
func (m *MsgTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferResponse.Merge(m, src)
}
func (m *MsgTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferResponse proto.InternalMessageInfo

func (m *MsgTransferResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *MsgTransferResponse) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

type MsgCreateOutputCoinSerialNumber struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateOutputCoinSerialNumber) Reset()         { *m = MsgCreateOutputCoinSerialNumber{} }
func (m *MsgCreateOutputCoinSerialNumber) String() string { return proto.CompactTextString(m) }
func (*MsgCreateOutputCoinSerialNumber) ProtoMessage()    {}
func (*MsgCreateOutputCoinSerialNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{48}
}
func (m *MsgCreateOutputCoinSerialNumber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateOutputCoinSerialNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateOutputCoinSerialNumber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateOutputCoinSerialNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateOutputCoinSerialNumber.Merge(m, src)
}
func (m *MsgCreateOutputCoinSerialNumber) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateOutputCoinSerialNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateOutputCoinSerialNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateOutputCoinSerialNumber proto.InternalMessageInfo

func (m *MsgCreateOutputCoinSerialNumber) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCreateOutputCoinSerialNumberResponse struct {
}

func (m *MsgCreateOutputCoinSerialNumberResponse) Reset() {
	*m = MsgCreateOutputCoinSerialNumberResponse{}
}
func (m *MsgCreateOutputCoinSerialNumberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateOutputCoinSerialNumberResponse) ProtoMessage()    {}
func (*MsgCreateOutputCoinSerialNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{49}
}
func (m *MsgCreateOutputCoinSerialNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateOutputCoinSerialNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateOutputCoinSerialNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateOutputCoinSerialNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateOutputCoinSerialNumberResponse.Merge(m, src)
}
func (m *MsgCreateOutputCoinSerialNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateOutputCoinSerialNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateOutputCoinSerialNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateOutputCoinSerialNumberResponse proto.InternalMessageInfo

type MsgUpdateOutputCoinSerialNumber struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgUpdateOutputCoinSerialNumber) Reset()         { *m = MsgUpdateOutputCoinSerialNumber{} }
func (m *MsgUpdateOutputCoinSerialNumber) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOutputCoinSerialNumber) ProtoMessage()    {}
func (*MsgUpdateOutputCoinSerialNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{50}
}
func (m *MsgUpdateOutputCoinSerialNumber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOutputCoinSerialNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOutputCoinSerialNumber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOutputCoinSerialNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOutputCoinSerialNumber.Merge(m, src)
}
func (m *MsgUpdateOutputCoinSerialNumber) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOutputCoinSerialNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOutputCoinSerialNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOutputCoinSerialNumber proto.InternalMessageInfo

func (m *MsgUpdateOutputCoinSerialNumber) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgUpdateOutputCoinSerialNumberResponse struct {
}

func (m *MsgUpdateOutputCoinSerialNumberResponse) Reset() {
	*m = MsgUpdateOutputCoinSerialNumberResponse{}
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOutputCoinSerialNumberResponse) ProtoMessage()    {}
func (*MsgUpdateOutputCoinSerialNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{51}
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOutputCoinSerialNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOutputCoinSerialNumberResponse.Merge(m, src)
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOutputCoinSerialNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOutputCoinSerialNumberResponse proto.InternalMessageInfo

type MsgDeleteOutputCoinSerialNumber struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeleteOutputCoinSerialNumber) Reset()         { *m = MsgDeleteOutputCoinSerialNumber{} }
func (m *MsgDeleteOutputCoinSerialNumber) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteOutputCoinSerialNumber) ProtoMessage()    {}
func (*MsgDeleteOutputCoinSerialNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{52}
}
func (m *MsgDeleteOutputCoinSerialNumber) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteOutputCoinSerialNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteOutputCoinSerialNumber.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteOutputCoinSerialNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteOutputCoinSerialNumber.Merge(m, src)
}
func (m *MsgDeleteOutputCoinSerialNumber) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteOutputCoinSerialNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteOutputCoinSerialNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteOutputCoinSerialNumber proto.InternalMessageInfo

func (m *MsgDeleteOutputCoinSerialNumber) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgDeleteOutputCoinSerialNumberResponse struct {
}

func (m *MsgDeleteOutputCoinSerialNumberResponse) Reset() {
	*m = MsgDeleteOutputCoinSerialNumberResponse{}
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteOutputCoinSerialNumberResponse) ProtoMessage()    {}
func (*MsgDeleteOutputCoinSerialNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{53}
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteOutputCoinSerialNumberResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteOutputCoinSerialNumberResponse.Merge(m, src)
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteOutputCoinSerialNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteOutputCoinSerialNumberResponse proto.InternalMessageInfo

type MsgPrivacyData struct {
	LockTime  uint64 `protobuf:"varint,1,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	Fee       uint64 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	Info      []byte `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	SigPubKey []byte `protobuf:"bytes,4,opt,name=sig_pub_key,json=sigPubKey,proto3" json:"sig_pub_key,omitempty"`
	Sig       []byte `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`
	Proof     []byte `protobuf:"bytes,6,opt,name=proof,proto3" json:"proof,omitempty"`
	TxType    int32  `protobuf:"varint,7,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	Metadata  []byte `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgPrivacyData) Reset()         { *m = MsgPrivacyData{} }
func (m *MsgPrivacyData) String() string { return proto.CompactTextString(m) }
func (*MsgPrivacyData) ProtoMessage()    {}
func (*MsgPrivacyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{54}
}
func (m *MsgPrivacyData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPrivacyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPrivacyData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPrivacyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPrivacyData.Merge(m, src)
}
func (m *MsgPrivacyData) XXX_Size() int {
	return m.Size()
}
func (m *MsgPrivacyData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPrivacyData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPrivacyData proto.InternalMessageInfo

func (m *MsgPrivacyData) GetLockTime() uint64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *MsgPrivacyData) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *MsgPrivacyData) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MsgPrivacyData) GetSigPubKey() []byte {
	if m != nil {
		return m.SigPubKey
	}
	return nil
}

func (m *MsgPrivacyData) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *MsgPrivacyData) GetProof() []byte {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *MsgPrivacyData) GetTxType() int32 {
	if m != nil {
		return m.TxType
	}
	return 0
}

func (m *MsgPrivacyData) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type MsgPrivacyDataResponse struct {
}

func (m *MsgPrivacyDataResponse) Reset()         { *m = MsgPrivacyDataResponse{} }
func (m *MsgPrivacyDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPrivacyDataResponse) ProtoMessage()    {}
func (*MsgPrivacyDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_039b3b08a7703bd9, []int{55}
}
func (m *MsgPrivacyDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPrivacyDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPrivacyDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPrivacyDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPrivacyDataResponse.Merge(m, src)
}
func (m *MsgPrivacyDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPrivacyDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPrivacyDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPrivacyDataResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateSerialNumber)(nil), "privacy.privacy.MsgCreateSerialNumber")
	proto.RegisterType((*MsgCreateSerialNumberResponse)(nil), "privacy.privacy.MsgCreateSerialNumberResponse")
	proto.RegisterType((*MsgUpdateSerialNumber)(nil), "privacy.privacy.MsgUpdateSerialNumber")
	proto.RegisterType((*MsgUpdateSerialNumberResponse)(nil), "privacy.privacy.MsgUpdateSerialNumberResponse")
	proto.RegisterType((*MsgDeleteSerialNumber)(nil), "privacy.privacy.MsgDeleteSerialNumber")
	proto.RegisterType((*MsgDeleteSerialNumberResponse)(nil), "privacy.privacy.MsgDeleteSerialNumberResponse")
	proto.RegisterType((*MsgCreateOutputCoin)(nil), "privacy.privacy.MsgCreateOutputCoin")
	proto.RegisterType((*MsgCreateOutputCoinResponse)(nil), "privacy.privacy.MsgCreateOutputCoinResponse")
	proto.RegisterType((*MsgUpdateOutputCoin)(nil), "privacy.privacy.MsgUpdateOutputCoin")
	proto.RegisterType((*MsgUpdateOutputCoinResponse)(nil), "privacy.privacy.MsgUpdateOutputCoinResponse")
	proto.RegisterType((*MsgDeleteOutputCoin)(nil), "privacy.privacy.MsgDeleteOutputCoin")
	proto.RegisterType((*MsgDeleteOutputCoinResponse)(nil), "privacy.privacy.MsgDeleteOutputCoinResponse")
	proto.RegisterType((*MsgCreateCommitment)(nil), "privacy.privacy.MsgCreateCommitment")
	proto.RegisterType((*MsgCreateCommitmentResponse)(nil), "privacy.privacy.MsgCreateCommitmentResponse")
	proto.RegisterType((*MsgUpdateCommitment)(nil), "privacy.privacy.MsgUpdateCommitment")
	proto.RegisterType((*MsgUpdateCommitmentResponse)(nil), "privacy.privacy.MsgUpdateCommitmentResponse")
	proto.RegisterType((*MsgDeleteCommitment)(nil), "privacy.privacy.MsgDeleteCommitment")
	proto.RegisterType((*MsgDeleteCommitmentResponse)(nil), "privacy.privacy.MsgDeleteCommitmentResponse")
	proto.RegisterType((*MsgCreateCommitmentIndex)(nil), "privacy.privacy.MsgCreateCommitmentIndex")
	proto.RegisterType((*MsgCreateCommitmentIndexResponse)(nil), "privacy.privacy.MsgCreateCommitmentIndexResponse")
	proto.RegisterType((*MsgUpdateCommitmentIndex)(nil), "privacy.privacy.MsgUpdateCommitmentIndex")
	proto.RegisterType((*MsgUpdateCommitmentIndexResponse)(nil), "privacy.privacy.MsgUpdateCommitmentIndexResponse")
	proto.RegisterType((*MsgDeleteCommitmentIndex)(nil), "privacy.privacy.MsgDeleteCommitmentIndex")
	proto.RegisterType((*MsgDeleteCommitmentIndexResponse)(nil), "privacy.privacy.MsgDeleteCommitmentIndexResponse")
	proto.RegisterType((*MsgCreateToken)(nil), "privacy.privacy.MsgCreateToken")
	proto.RegisterType((*MsgCreateTokenResponse)(nil), "privacy.privacy.MsgCreateTokenResponse")
	proto.RegisterType((*MsgUpdateToken)(nil), "privacy.privacy.MsgUpdateToken")
	proto.RegisterType((*MsgUpdateTokenResponse)(nil), "privacy.privacy.MsgUpdateTokenResponse")
	proto.RegisterType((*MsgDeleteToken)(nil), "privacy.privacy.MsgDeleteToken")
	proto.RegisterType((*MsgDeleteTokenResponse)(nil), "privacy.privacy.MsgDeleteTokenResponse")
	proto.RegisterType((*MsgCreateOnetimeAddress)(nil), "privacy.privacy.MsgCreateOnetimeAddress")
	proto.RegisterType((*MsgCreateOnetimeAddressResponse)(nil), "privacy.privacy.MsgCreateOnetimeAddressResponse")
	proto.RegisterType((*MsgUpdateOnetimeAddress)(nil), "privacy.privacy.MsgUpdateOnetimeAddress")
	proto.RegisterType((*MsgUpdateOnetimeAddressResponse)(nil), "privacy.privacy.MsgUpdateOnetimeAddressResponse")
	proto.RegisterType((*MsgDeleteOnetimeAddress)(nil), "privacy.privacy.MsgDeleteOnetimeAddress")
	proto.RegisterType((*MsgDeleteOnetimeAddressResponse)(nil), "privacy.privacy.MsgDeleteOnetimeAddressResponse")
	proto.RegisterType((*MsgCreateTx)(nil), "privacy.privacy.MsgCreateTx")
	proto.RegisterType((*MsgCreateTxResponse)(nil), "privacy.privacy.MsgCreateTxResponse")
	proto.RegisterType((*MsgCreateTxPrivacyData)(nil), "privacy.privacy.MsgCreateTxPrivacyData")
	proto.RegisterType((*MsgCreateTxPrivacyDataResponse)(nil), "privacy.privacy.MsgCreateTxPrivacyDataResponse")
	proto.RegisterType((*MsgUpdateTxPrivacyData)(nil), "privacy.privacy.MsgUpdateTxPrivacyData")
	proto.RegisterType((*MsgUpdateTxPrivacyDataResponse)(nil), "privacy.privacy.MsgUpdateTxPrivacyDataResponse")
	proto.RegisterType((*MsgDeleteTxPrivacyData)(nil), "privacy.privacy.MsgDeleteTxPrivacyData")
	proto.RegisterType((*MsgDeleteTxPrivacyDataResponse)(nil), "privacy.privacy.MsgDeleteTxPrivacyDataResponse")
	proto.RegisterType((*MsgAirdrop)(nil), "privacy.privacy.MsgAirdrop")
	proto.RegisterType((*MsgAirdropResponse)(nil), "privacy.privacy.MsgAirdropResponse")
	proto.RegisterType((*MsgTransfer)(nil), "privacy.privacy.MsgTransfer")
	proto.RegisterType((*MsgTransfer_PaymentInfo)(nil), "privacy.privacy.MsgTransfer.PaymentInfo")
	proto.RegisterType((*MsgTransferResponse)(nil), "privacy.privacy.MsgTransferResponse")
	proto.RegisterType((*MsgCreateOutputCoinSerialNumber)(nil), "privacy.privacy.MsgCreateOutputCoinSerialNumber")
	proto.RegisterType((*MsgCreateOutputCoinSerialNumberResponse)(nil), "privacy.privacy.MsgCreateOutputCoinSerialNumberResponse")
	proto.RegisterType((*MsgUpdateOutputCoinSerialNumber)(nil), "privacy.privacy.MsgUpdateOutputCoinSerialNumber")
	proto.RegisterType((*MsgUpdateOutputCoinSerialNumberResponse)(nil), "privacy.privacy.MsgUpdateOutputCoinSerialNumberResponse")
	proto.RegisterType((*MsgDeleteOutputCoinSerialNumber)(nil), "privacy.privacy.MsgDeleteOutputCoinSerialNumber")
	proto.RegisterType((*MsgDeleteOutputCoinSerialNumberResponse)(nil), "privacy.privacy.MsgDeleteOutputCoinSerialNumberResponse")
	proto.RegisterType((*MsgPrivacyData)(nil), "privacy.privacy.MsgPrivacyData")
	proto.RegisterType((*MsgPrivacyDataResponse)(nil), "privacy.privacy.MsgPrivacyDataResponse")
}

func init() { proto.RegisterFile("privacy/tx.proto", fileDescriptor_039b3b08a7703bd9) }

var fileDescriptor_039b3b08a7703bd9 = []byte{
	// 1265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x99, 0x4f, 0x6f, 0xdb, 0x36,
	0x18, 0xc6, 0xeb, 0x39, 0x7f, 0x9c, 0xd7, 0x59, 0x1b, 0x30, 0x49, 0xa3, 0x2a, 0x89, 0x9d, 0xba,
	0xc1, 0xe2, 0x00, 0x83, 0x93, 0x76, 0x97, 0x01, 0xbd, 0xac, 0x4d, 0x8b, 0x2d, 0x2b, 0xd2, 0x05,
	0x5e, 0x86, 0x01, 0xbb, 0x08, 0x8a, 0x4d, 0x1b, 0x42, 0x6c, 0x4b, 0x90, 0xe4, 0xc0, 0xfe, 0x0a,
	0x3b, 0xed, 0x63, 0x0d, 0xd8, 0x25, 0xc7, 0x1d, 0x87, 0xe4, 0x63, 0xec, 0x32, 0x90, 0xa2, 0x28,
	0x86, 0xa2, 0x28, 0x79, 0xf6, 0xc9, 0x12, 0xf9, 0xea, 0xf9, 0x91, 0x2f, 0x5f, 0x51, 0x7c, 0x60,
	0xd8, 0xf0, 0x7c, 0xe7, 0xd6, 0xee, 0x4c, 0x4f, 0xc2, 0x49, 0xcb, 0xf3, 0xdd, 0xd0, 0x45, 0xcf,
	0x58, 0x4b, 0x8b, 0xfd, 0x9a, 0xbb, 0x71, 0x48, 0x80, 0x7d, 0xc7, 0x1e, 0x58, 0xa3, 0xf1, 0xf0,
	0x1a, 0xfb, 0x51, 0xb4, 0xf9, 0x22, 0xee, 0x74, 0xc7, 0xa1, 0x37, 0x0e, 0xad, 0x8e, 0xeb, 0x8c,
	0x58, 0x97, 0x11, 0x77, 0x75, 0xdc, 0xe1, 0xd0, 0x09, 0x87, 0x78, 0x14, 0xb2, 0x9e, 0x5a, 0xba,
	0xc7, 0x72, 0x46, 0x5d, 0xcc, 0x86, 0x60, 0x6e, 0xf2, 0x41, 0xb9, 0x37, 0x38, 0x96, 0xdb, 0xe7,
	0xa4, 0x11, 0x0e, 0x9d, 0x21, 0xb6, 0xec, 0x6e, 0xd7, 0xc7, 0x41, 0x20, 0x77, 0x87, 0x13, 0x8b,
	0x5d, 0x5a, 0x5d, 0x3b, 0xb4, 0x59, 0xf7, 0x91, 0x62, 0x9c, 0x96, 0x62, 0x42, 0x8d, 0xef, 0x61,
	0xfb, 0x22, 0xe8, 0x9f, 0xf9, 0xd8, 0x0e, 0xf1, 0xcf, 0xb4, 0xff, 0x33, 0xed, 0x46, 0x06, 0xac,
	0x76, 0x48, 0xab, 0xeb, 0x1b, 0xa5, 0x83, 0x52, 0x73, 0xad, 0x1d, 0xdf, 0xa2, 0x2d, 0x58, 0xa6,
	0xa3, 0x37, 0xbe, 0xa0, 0xed, 0xd1, 0x4d, 0xa3, 0x0e, 0xfb, 0x4a, 0xa1, 0x36, 0x0e, 0x3c, 0x77,
	0x14, 0x60, 0x46, 0xfa, 0xc5, 0xeb, 0x2e, 0x86, 0x94, 0x16, 0x92, 0x48, 0x1f, 0xf0, 0x00, 0x2f,
	0x84, 0x94, 0x16, 0xe2, 0xa4, 0x8f, 0xb0, 0xc9, 0x27, 0xfd, 0x13, 0xcd, 0xf4, 0x99, 0xeb, 0x8c,
	0x66, 0xe6, 0xec, 0xc3, 0xae, 0x42, 0x46, 0xa2, 0x44, 0x13, 0x9e, 0x9b, 0x22, 0xcb, 0x48, 0x94,
	0x68, 0xb2, 0x73, 0x53, 0x64, 0x19, 0x65, 0xc6, 0xce, 0xf8, 0xeb, 0x30, 0x57, 0xc6, 0x12, 0x19,
	0x65, 0xc6, 0xe6, 0xa6, 0xc8, 0x32, 0xca, 0x8c, 0xcd, 0x4d, 0x91, 0x65, 0x38, 0xe5, 0x47, 0x30,
	0x14, 0x53, 0x3d, 0x27, 0x8f, 0xce, 0x8c, 0x6a, 0xc0, 0x41, 0x96, 0x96, 0xc4, 0x93, 0x27, 0x3d,
	0x0f, 0x4f, 0xa9, 0x25, 0xf1, 0xe4, 0xe9, 0xcf, 0xc3, 0x53, 0x6a, 0x71, 0xde, 0x77, 0xf0, 0x94,
	0xe7, 0xe0, 0x8a, 0x6c, 0xb8, 0x33, 0x53, 0x0c, 0x78, 0xfe, 0x58, 0x41, 0xd2, 0x8e, 0xe6, 0x3b,
	0x8f, 0xb6, 0xa0, 0x20, 0x69, 0x47, 0x73, 0x9b, 0x47, 0x5b, 0x50, 0xe0, 0xda, 0xe7, 0xb0, 0x93,
	0x6c, 0x40, 0xd1, 0xf7, 0xe6, 0x5d, 0xf4, 0xb9, 0x99, 0x19, 0xf2, 0x12, 0xea, 0x19, 0x52, 0x12,
	0x8d, 0x6d, 0x44, 0x8b, 0xa0, 0xa9, 0xa4, 0x24, 0x1a, 0xdb, 0x90, 0x16, 0x41, 0x53, 0x49, 0x71,
	0xda, 0x2b, 0xa8, 0x26, 0xb5, 0x31, 0x21, 0x3a, 0xb7, 0xf6, 0x60, 0x8c, 0xa9, 0xfe, 0x7a, 0x3b,
	0xba, 0x69, 0x6c, 0x0b, 0x9b, 0xe0, 0x55, 0x52, 0x99, 0x3f, 0x88, 0x75, 0x35, 0xb9, 0x8c, 0xbe,
	0xe0, 0x1f, 0xec, 0xd0, 0x9e, 0x79, 0xa0, 0x07, 0x50, 0x53, 0x2b, 0x49, 0x2c, 0x56, 0x67, 0x0b,
	0x60, 0x29, 0x94, 0x24, 0x16, 0xab, 0xbb, 0x05, 0xb0, 0x14, 0x4a, 0x9c, 0x35, 0x06, 0xb8, 0x08,
	0xfa, 0xef, 0x1c, 0xbf, 0xeb, 0xbb, 0x9e, 0x46, 0xff, 0x25, 0xac, 0xbb, 0xa1, 0x6d, 0xf9, 0xb8,
	0x83, 0x9d, 0x5b, 0xec, 0x33, 0x4c, 0xd5, 0x25, 0x52, 0x51, 0x13, 0x7a, 0x0e, 0x2b, 0xf6, 0xd0,
	0x1d, 0x8f, 0x42, 0xa3, 0x4c, 0x17, 0x8f, 0xdd, 0x21, 0x04, 0x4b, 0xce, 0xa8, 0xe7, 0x1a, 0x4b,
	0xb4, 0x95, 0x5e, 0x37, 0xb6, 0x00, 0x25, 0x58, 0x3e, 0x98, 0x7f, 0x4b, 0xb4, 0x1a, 0xae, 0x7c,
	0x7b, 0x14, 0xf4, 0xb4, 0xe7, 0x8f, 0x3a, 0x54, 0xe9, 0x89, 0x2d, 0xc4, 0xd6, 0x0d, 0x9e, 0xb2,
	0xd1, 0x00, 0x6b, 0xfa, 0x84, 0xa7, 0xe8, 0x02, 0xbe, 0xf4, 0xec, 0x29, 0x3b, 0x3a, 0xf6, 0xdc,
	0xc0, 0x28, 0x1f, 0x94, 0x9b, 0xd5, 0x37, 0xcd, 0x96, 0x74, 0x7c, 0x6d, 0x09, 0xbc, 0xd6, 0x65,
	0xf4, 0xc4, 0xf9, 0xa8, 0xe7, 0xb6, 0xd7, 0xbd, 0xe4, 0x26, 0x30, 0xaf, 0xa1, 0x2a, 0x74, 0xa2,
	0x23, 0x78, 0x16, 0xab, 0xb3, 0x63, 0x26, 0x1b, 0xe0, 0x53, 0xd6, 0x1c, 0xbf, 0x31, 0x49, 0x4e,
	0xc8, 0x10, 0x97, 0x52, 0x39, 0x29, 0x0b, 0x39, 0x79, 0x4f, 0xab, 0x3c, 0x1e, 0x4c, 0x9c, 0x14,
	0xb4, 0x01, 0xe5, 0x61, 0xd0, 0x67, 0xfa, 0xe4, 0x12, 0xbd, 0x80, 0x8a, 0x13, 0x58, 0xd8, 0xf7,
	0xdd, 0x68, 0x1d, 0x2a, 0xed, 0x55, 0x27, 0xf8, 0x48, 0x6e, 0x1b, 0x6f, 0xc5, 0xdd, 0x84, 0x9f,
	0x26, 0x8a, 0x1d, 0xea, 0x1a, 0xc7, 0x70, 0x94, 0xf3, 0x30, 0x5f, 0xa9, 0xb7, 0xe2, 0x3e, 0xf2,
	0xff, 0x38, 0xba, 0x87, 0x25, 0x8e, 0x7c, 0x3a, 0x9a, 0x89, 0xa3, 0x7b, 0x98, 0x73, 0xee, 0x4a,
	0xf4, 0x6b, 0x21, 0xbe, 0x6b, 0xbb, 0xb0, 0x36, 0x70, 0x3b, 0x37, 0x16, 0xd9, 0xb5, 0xa8, 0xf2,
	0x52, 0xbb, 0x42, 0x1a, 0xae, 0x9c, 0x21, 0x5d, 0x94, 0x1e, 0xc6, 0x6c, 0x51, 0xc9, 0xa5, 0x6a,
	0x45, 0x51, 0x0d, 0xaa, 0x81, 0xd3, 0xb7, 0xbc, 0xf1, 0x35, 0xad, 0xd2, 0xe8, 0x05, 0x58, 0x0b,
	0x9c, 0xfe, 0xe5, 0xf8, 0x9a, 0x14, 0xe9, 0x06, 0x94, 0x03, 0xa7, 0x6f, 0x2c, 0xd3, 0x76, 0x72,
	0x49, 0x5e, 0x63, 0xcf, 0x77, 0xdd, 0x9e, 0xb1, 0x12, 0xed, 0x7f, 0xf4, 0x06, 0xed, 0xc0, 0x6a,
	0x38, 0xb1, 0xc2, 0xa9, 0x87, 0x8d, 0xd5, 0x83, 0x52, 0x73, 0xb9, 0xbd, 0x12, 0x4e, 0xae, 0xa6,
	0x1e, 0x46, 0x26, 0x54, 0x86, 0x38, 0xb4, 0x89, 0x91, 0x31, 0x2a, 0xf4, 0x09, 0x7e, 0xcf, 0xbe,
	0x5e, 0x8a, 0x77, 0xfe, 0xcd, 0x5f, 0x3b, 0x50, 0xbe, 0x08, 0xfa, 0x68, 0x00, 0x48, 0x61, 0x64,
	0xbe, 0x52, 0xbd, 0x22, 0xe9, 0x38, 0xb3, 0x55, 0x2c, 0x8e, 0xd7, 0xf1, 0x00, 0x90, 0xc2, 0xcc,
	0x28, 0x69, 0xe9, 0x38, 0x35, 0x2d, 0xdb, 0xd3, 0x10, 0x9a, 0xc2, 0xd0, 0x28, 0x69, 0xe9, 0x38,
	0x35, 0x2d, 0xdb, 0xd7, 0xa0, 0x1e, 0x6c, 0xa4, 0x4c, 0xcd, 0x61, 0x76, 0x7e, 0x92, 0x28, 0xf3,
	0xeb, 0x22, 0x51, 0x22, 0x27, 0x65, 0x6b, 0x0e, 0xb3, 0x33, 0x93, 0xc7, 0xc9, 0xf2, 0x36, 0x84,
	0x93, 0x32, 0x36, 0x87, 0xd9, 0x39, 0xc9, 0xe3, 0x64, 0xb9, 0x9b, 0x24, 0x6f, 0x82, 0x1d, 0xd0,
	0xe4, 0x2d, 0x89, 0xd2, 0xe5, 0x2d, 0xed, 0x09, 0x92, 0xbc, 0xe5, 0x71, 0xe4, 0x28, 0x5d, 0xde,
	0xd4, 0x9c, 0x94, 0xbd, 0xd1, 0xe4, 0x2d, 0x8f, 0x93, 0xe5, 0x71, 0xd0, 0x18, 0xb6, 0xd5, 0x06,
	0xe7, 0xb8, 0x48, 0x5a, 0x68, 0xa8, 0xf9, 0xba, 0x70, 0xa8, 0x88, 0x55, 0xfb, 0x9c, 0xe3, 0x22,
	0x59, 0xd2, 0x60, 0xb5, 0x8e, 0x87, 0x60, 0xd5, 0x76, 0xe7, 0xb8, 0x48, 0xd2, 0x34, 0x58, 0xad,
	0xf1, 0x41, 0xbf, 0x42, 0x55, 0x74, 0x3d, 0xf5, 0xec, 0x7c, 0xd1, 0x00, 0xf3, 0x28, 0x27, 0x40,
	0x14, 0x16, 0x2d, 0x4f, 0x3d, 0x3b, 0x23, 0x1a, 0x61, 0x85, 0xe5, 0x21, 0xc2, 0xa2, 0xdf, 0xa9,
	0x67, 0xcf, 0x59, 0x23, 0xac, 0xf0, 0x3b, 0xc8, 0x87, 0x2d, 0xa5, 0xd9, 0x69, 0x6a, 0x76, 0xaf,
	0x47, 0x91, 0xe6, 0x69, 0xd1, 0x48, 0x91, 0xa9, 0xb4, 0x3c, 0x4d, 0xcd, 0x4e, 0x56, 0x80, 0xa9,
	0xf3, 0x3e, 0x84, 0xa9, 0x34, 0x3e, 0x4d, 0xcd, 0xae, 0x56, 0x80, 0xa9, 0x73, 0x40, 0xe8, 0x33,
	0x54, 0xb8, 0xfd, 0xd9, 0xd3, 0x94, 0xd0, 0xc4, 0x3c, 0xd4, 0xf5, 0x72, 0x3d, 0x17, 0x36, 0x55,
	0x96, 0x48, 0x57, 0x9d, 0x62, 0xa0, 0x79, 0x52, 0x30, 0x50, 0x04, 0xaa, 0x7c, 0x91, 0xae, 0x6a,
	0xf3, 0x81, 0x1a, 0x7f, 0x44, 0x80, 0x2a, 0x73, 0xa4, 0xab, 0xe6, 0x7c, 0xa0, 0xc6, 0x24, 0xa1,
	0x4f, 0xb0, 0x1a, 0x3b, 0xa4, 0x5d, 0xd5, 0xb3, 0xac, 0xd3, 0x7c, 0xa5, 0xe9, 0x14, 0xd7, 0x9b,
	0x1b, 0x9c, 0x3d, 0x9d, 0x1d, 0x51, 0xaf, 0x77, 0xca, 0x1f, 0xfc, 0x5e, 0x82, 0x3d, 0xed, 0x81,
	0xff, 0xb4, 0xc8, 0x11, 0xe3, 0xd1, 0xf1, 0xe7, 0xdb, 0x59, 0x9f, 0x78, 0x34, 0x18, 0xad, 0x2b,
	0x38, 0x2d, 0x72, 0x0e, 0xc9, 0x1f, 0x4c, 0x11, 0xf3, 0x40, 0x07, 0xa3, 0xb5, 0x0e, 0xa7, 0x45,
	0x0e, 0x2b, 0xf9, 0x83, 0x29, 0xe2, 0x30, 0xc8, 0xde, 0x2c, 0x16, 0xab, 0x72, 0x6f, 0x16, 0x8b,
	0xf4, 0x28, 0x27, 0x20, 0x16, 0x7e, 0xff, 0xfa, 0xcf, 0xfb, 0x5a, 0xe9, 0xee, 0xbe, 0x56, 0xfa,
	0xe7, 0xbe, 0x56, 0xfa, 0xe3, 0xa1, 0xf6, 0xe4, 0xee, 0xa1, 0xf6, 0xe4, 0xef, 0x87, 0xda, 0x93,
	0xdf, 0x76, 0xe2, 0x3f, 0x35, 0x26, 0x27, 0xfc, 0xdf, 0x8f, 0xa9, 0x87, 0x83, 0xeb, 0x15, 0xfa,
	0x5f, 0xc6, 0x37, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x5f, 0xb2, 0x5a, 0xde, 0x19, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateSerialNumber(ctx context.Context, in *MsgCreateSerialNumber, opts ...grpc.CallOption) (*MsgCreateSerialNumberResponse, error)
	UpdateSerialNumber(ctx context.Context, in *MsgUpdateSerialNumber, opts ...grpc.CallOption) (*MsgUpdateSerialNumberResponse, error)
	DeleteSerialNumber(ctx context.Context, in *MsgDeleteSerialNumber, opts ...grpc.CallOption) (*MsgDeleteSerialNumberResponse, error)
	CreateOutputCoin(ctx context.Context, in *MsgCreateOutputCoin, opts ...grpc.CallOption) (*MsgCreateOutputCoinResponse, error)
	UpdateOutputCoin(ctx context.Context, in *MsgUpdateOutputCoin, opts ...grpc.CallOption) (*MsgUpdateOutputCoinResponse, error)
	DeleteOutputCoin(ctx context.Context, in *MsgDeleteOutputCoin, opts ...grpc.CallOption) (*MsgDeleteOutputCoinResponse, error)
	CreateCommitment(ctx context.Context, in *MsgCreateCommitment, opts ...grpc.CallOption) (*MsgCreateCommitmentResponse, error)
	UpdateCommitment(ctx context.Context, in *MsgUpdateCommitment, opts ...grpc.CallOption) (*MsgUpdateCommitmentResponse, error)
	DeleteCommitment(ctx context.Context, in *MsgDeleteCommitment, opts ...grpc.CallOption) (*MsgDeleteCommitmentResponse, error)
	CreateCommitmentIndex(ctx context.Context, in *MsgCreateCommitmentIndex, opts ...grpc.CallOption) (*MsgCreateCommitmentIndexResponse, error)
	UpdateCommitmentIndex(ctx context.Context, in *MsgUpdateCommitmentIndex, opts ...grpc.CallOption) (*MsgUpdateCommitmentIndexResponse, error)
	DeleteCommitmentIndex(ctx context.Context, in *MsgDeleteCommitmentIndex, opts ...grpc.CallOption) (*MsgDeleteCommitmentIndexResponse, error)
	CreateToken(ctx context.Context, in *MsgCreateToken, opts ...grpc.CallOption) (*MsgCreateTokenResponse, error)
	UpdateToken(ctx context.Context, in *MsgUpdateToken, opts ...grpc.CallOption) (*MsgUpdateTokenResponse, error)
	DeleteToken(ctx context.Context, in *MsgDeleteToken, opts ...grpc.CallOption) (*MsgDeleteTokenResponse, error)
	CreateOnetimeAddress(ctx context.Context, in *MsgCreateOnetimeAddress, opts ...grpc.CallOption) (*MsgCreateOnetimeAddressResponse, error)
	UpdateOnetimeAddress(ctx context.Context, in *MsgUpdateOnetimeAddress, opts ...grpc.CallOption) (*MsgUpdateOnetimeAddressResponse, error)
	DeleteOnetimeAddress(ctx context.Context, in *MsgDeleteOnetimeAddress, opts ...grpc.CallOption) (*MsgDeleteOnetimeAddressResponse, error)
	CreateTx(ctx context.Context, in *MsgCreateTx, opts ...grpc.CallOption) (*MsgCreateTxResponse, error)
	CreateTxPrivacyData(ctx context.Context, in *MsgCreateTxPrivacyData, opts ...grpc.CallOption) (*MsgCreateTxPrivacyDataResponse, error)
	UpdateTxPrivacyData(ctx context.Context, in *MsgUpdateTxPrivacyData, opts ...grpc.CallOption) (*MsgUpdateTxPrivacyDataResponse, error)
	DeleteTxPrivacyData(ctx context.Context, in *MsgDeleteTxPrivacyData, opts ...grpc.CallOption) (*MsgDeleteTxPrivacyDataResponse, error)
	Airdrop(ctx context.Context, in *MsgAirdrop, opts ...grpc.CallOption) (*MsgAirdropResponse, error)
	Transfer(ctx context.Context, in *MsgTransfer, opts ...grpc.CallOption) (*MsgTransferResponse, error)
	CreateOutputCoinSerialNumber(ctx context.Context, in *MsgCreateOutputCoinSerialNumber, opts ...grpc.CallOption) (*MsgCreateOutputCoinSerialNumberResponse, error)
	UpdateOutputCoinSerialNumber(ctx context.Context, in *MsgUpdateOutputCoinSerialNumber, opts ...grpc.CallOption) (*MsgUpdateOutputCoinSerialNumberResponse, error)
	DeleteOutputCoinSerialNumber(ctx context.Context, in *MsgDeleteOutputCoinSerialNumber, opts ...grpc.CallOption) (*MsgDeleteOutputCoinSerialNumberResponse, error)
	PrivacyData(ctx context.Context, in *MsgPrivacyData, opts ...grpc.CallOption) (*MsgPrivacyDataResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateSerialNumber(ctx context.Context, in *MsgCreateSerialNumber, opts ...grpc.CallOption) (*MsgCreateSerialNumberResponse, error) {
	out := new(MsgCreateSerialNumberResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateSerialNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSerialNumber(ctx context.Context, in *MsgUpdateSerialNumber, opts ...grpc.CallOption) (*MsgUpdateSerialNumberResponse, error) {
	out := new(MsgUpdateSerialNumberResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateSerialNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSerialNumber(ctx context.Context, in *MsgDeleteSerialNumber, opts ...grpc.CallOption) (*MsgDeleteSerialNumberResponse, error) {
	out := new(MsgDeleteSerialNumberResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteSerialNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateOutputCoin(ctx context.Context, in *MsgCreateOutputCoin, opts ...grpc.CallOption) (*MsgCreateOutputCoinResponse, error) {
	out := new(MsgCreateOutputCoinResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateOutputCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOutputCoin(ctx context.Context, in *MsgUpdateOutputCoin, opts ...grpc.CallOption) (*MsgUpdateOutputCoinResponse, error) {
	out := new(MsgUpdateOutputCoinResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateOutputCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteOutputCoin(ctx context.Context, in *MsgDeleteOutputCoin, opts ...grpc.CallOption) (*MsgDeleteOutputCoinResponse, error) {
	out := new(MsgDeleteOutputCoinResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteOutputCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCommitment(ctx context.Context, in *MsgCreateCommitment, opts ...grpc.CallOption) (*MsgCreateCommitmentResponse, error) {
	out := new(MsgCreateCommitmentResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateCommitment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateCommitment(ctx context.Context, in *MsgUpdateCommitment, opts ...grpc.CallOption) (*MsgUpdateCommitmentResponse, error) {
	out := new(MsgUpdateCommitmentResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateCommitment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCommitment(ctx context.Context, in *MsgDeleteCommitment, opts ...grpc.CallOption) (*MsgDeleteCommitmentResponse, error) {
	out := new(MsgDeleteCommitmentResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteCommitment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCommitmentIndex(ctx context.Context, in *MsgCreateCommitmentIndex, opts ...grpc.CallOption) (*MsgCreateCommitmentIndexResponse, error) {
	out := new(MsgCreateCommitmentIndexResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateCommitmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateCommitmentIndex(ctx context.Context, in *MsgUpdateCommitmentIndex, opts ...grpc.CallOption) (*MsgUpdateCommitmentIndexResponse, error) {
	out := new(MsgUpdateCommitmentIndexResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateCommitmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCommitmentIndex(ctx context.Context, in *MsgDeleteCommitmentIndex, opts ...grpc.CallOption) (*MsgDeleteCommitmentIndexResponse, error) {
	out := new(MsgDeleteCommitmentIndexResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteCommitmentIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateToken(ctx context.Context, in *MsgCreateToken, opts ...grpc.CallOption) (*MsgCreateTokenResponse, error) {
	out := new(MsgCreateTokenResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateToken(ctx context.Context, in *MsgUpdateToken, opts ...grpc.CallOption) (*MsgUpdateTokenResponse, error) {
	out := new(MsgUpdateTokenResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteToken(ctx context.Context, in *MsgDeleteToken, opts ...grpc.CallOption) (*MsgDeleteTokenResponse, error) {
	out := new(MsgDeleteTokenResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateOnetimeAddress(ctx context.Context, in *MsgCreateOnetimeAddress, opts ...grpc.CallOption) (*MsgCreateOnetimeAddressResponse, error) {
	out := new(MsgCreateOnetimeAddressResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateOnetimeAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOnetimeAddress(ctx context.Context, in *MsgUpdateOnetimeAddress, opts ...grpc.CallOption) (*MsgUpdateOnetimeAddressResponse, error) {
	out := new(MsgUpdateOnetimeAddressResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateOnetimeAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteOnetimeAddress(ctx context.Context, in *MsgDeleteOnetimeAddress, opts ...grpc.CallOption) (*MsgDeleteOnetimeAddressResponse, error) {
	out := new(MsgDeleteOnetimeAddressResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteOnetimeAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTx(ctx context.Context, in *MsgCreateTx, opts ...grpc.CallOption) (*MsgCreateTxResponse, error) {
	out := new(MsgCreateTxResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTxPrivacyData(ctx context.Context, in *MsgCreateTxPrivacyData, opts ...grpc.CallOption) (*MsgCreateTxPrivacyDataResponse, error) {
	out := new(MsgCreateTxPrivacyDataResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateTxPrivacyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTxPrivacyData(ctx context.Context, in *MsgUpdateTxPrivacyData, opts ...grpc.CallOption) (*MsgUpdateTxPrivacyDataResponse, error) {
	out := new(MsgUpdateTxPrivacyDataResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateTxPrivacyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTxPrivacyData(ctx context.Context, in *MsgDeleteTxPrivacyData, opts ...grpc.CallOption) (*MsgDeleteTxPrivacyDataResponse, error) {
	out := new(MsgDeleteTxPrivacyDataResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteTxPrivacyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Airdrop(ctx context.Context, in *MsgAirdrop, opts ...grpc.CallOption) (*MsgAirdropResponse, error) {
	out := new(MsgAirdropResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/Airdrop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Transfer(ctx context.Context, in *MsgTransfer, opts ...grpc.CallOption) (*MsgTransferResponse, error) {
	out := new(MsgTransferResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateOutputCoinSerialNumber(ctx context.Context, in *MsgCreateOutputCoinSerialNumber, opts ...grpc.CallOption) (*MsgCreateOutputCoinSerialNumberResponse, error) {
	out := new(MsgCreateOutputCoinSerialNumberResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/CreateOutputCoinSerialNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOutputCoinSerialNumber(ctx context.Context, in *MsgUpdateOutputCoinSerialNumber, opts ...grpc.CallOption) (*MsgUpdateOutputCoinSerialNumberResponse, error) {
	out := new(MsgUpdateOutputCoinSerialNumberResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/UpdateOutputCoinSerialNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteOutputCoinSerialNumber(ctx context.Context, in *MsgDeleteOutputCoinSerialNumber, opts ...grpc.CallOption) (*MsgDeleteOutputCoinSerialNumberResponse, error) {
	out := new(MsgDeleteOutputCoinSerialNumberResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/DeleteOutputCoinSerialNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PrivacyData(ctx context.Context, in *MsgPrivacyData, opts ...grpc.CallOption) (*MsgPrivacyDataResponse, error) {
	out := new(MsgPrivacyDataResponse)
	err := c.cc.Invoke(ctx, "/privacy.privacy.Msg/PrivacyData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateSerialNumber(context.Context, *MsgCreateSerialNumber) (*MsgCreateSerialNumberResponse, error)
	UpdateSerialNumber(context.Context, *MsgUpdateSerialNumber) (*MsgUpdateSerialNumberResponse, error)
	DeleteSerialNumber(context.Context, *MsgDeleteSerialNumber) (*MsgDeleteSerialNumberResponse, error)
	CreateOutputCoin(context.Context, *MsgCreateOutputCoin) (*MsgCreateOutputCoinResponse, error)
	UpdateOutputCoin(context.Context, *MsgUpdateOutputCoin) (*MsgUpdateOutputCoinResponse, error)
	DeleteOutputCoin(context.Context, *MsgDeleteOutputCoin) (*MsgDeleteOutputCoinResponse, error)
	CreateCommitment(context.Context, *MsgCreateCommitment) (*MsgCreateCommitmentResponse, error)
	UpdateCommitment(context.Context, *MsgUpdateCommitment) (*MsgUpdateCommitmentResponse, error)
	DeleteCommitment(context.Context, *MsgDeleteCommitment) (*MsgDeleteCommitmentResponse, error)
	CreateCommitmentIndex(context.Context, *MsgCreateCommitmentIndex) (*MsgCreateCommitmentIndexResponse, error)
	UpdateCommitmentIndex(context.Context, *MsgUpdateCommitmentIndex) (*MsgUpdateCommitmentIndexResponse, error)
	DeleteCommitmentIndex(context.Context, *MsgDeleteCommitmentIndex) (*MsgDeleteCommitmentIndexResponse, error)
	CreateToken(context.Context, *MsgCreateToken) (*MsgCreateTokenResponse, error)
	UpdateToken(context.Context, *MsgUpdateToken) (*MsgUpdateTokenResponse, error)
	DeleteToken(context.Context, *MsgDeleteToken) (*MsgDeleteTokenResponse, error)
	CreateOnetimeAddress(context.Context, *MsgCreateOnetimeAddress) (*MsgCreateOnetimeAddressResponse, error)
	UpdateOnetimeAddress(context.Context, *MsgUpdateOnetimeAddress) (*MsgUpdateOnetimeAddressResponse, error)
	DeleteOnetimeAddress(context.Context, *MsgDeleteOnetimeAddress) (*MsgDeleteOnetimeAddressResponse, error)
	CreateTx(context.Context, *MsgCreateTx) (*MsgCreateTxResponse, error)
	CreateTxPrivacyData(context.Context, *MsgCreateTxPrivacyData) (*MsgCreateTxPrivacyDataResponse, error)
	UpdateTxPrivacyData(context.Context, *MsgUpdateTxPrivacyData) (*MsgUpdateTxPrivacyDataResponse, error)
	DeleteTxPrivacyData(context.Context, *MsgDeleteTxPrivacyData) (*MsgDeleteTxPrivacyDataResponse, error)
	Airdrop(context.Context, *MsgAirdrop) (*MsgAirdropResponse, error)
	Transfer(context.Context, *MsgTransfer) (*MsgTransferResponse, error)
	CreateOutputCoinSerialNumber(context.Context, *MsgCreateOutputCoinSerialNumber) (*MsgCreateOutputCoinSerialNumberResponse, error)
	UpdateOutputCoinSerialNumber(context.Context, *MsgUpdateOutputCoinSerialNumber) (*MsgUpdateOutputCoinSerialNumberResponse, error)
	DeleteOutputCoinSerialNumber(context.Context, *MsgDeleteOutputCoinSerialNumber) (*MsgDeleteOutputCoinSerialNumberResponse, error)
	PrivacyData(context.Context, *MsgPrivacyData) (*MsgPrivacyDataResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateSerialNumber(ctx context.Context, req *MsgCreateSerialNumber) (*MsgCreateSerialNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSerialNumber not implemented")
}
func (*UnimplementedMsgServer) UpdateSerialNumber(ctx context.Context, req *MsgUpdateSerialNumber) (*MsgUpdateSerialNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSerialNumber not implemented")
}
func (*UnimplementedMsgServer) DeleteSerialNumber(ctx context.Context, req *MsgDeleteSerialNumber) (*MsgDeleteSerialNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSerialNumber not implemented")
}
func (*UnimplementedMsgServer) CreateOutputCoin(ctx context.Context, req *MsgCreateOutputCoin) (*MsgCreateOutputCoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOutputCoin not implemented")
}
func (*UnimplementedMsgServer) UpdateOutputCoin(ctx context.Context, req *MsgUpdateOutputCoin) (*MsgUpdateOutputCoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOutputCoin not implemented")
}
func (*UnimplementedMsgServer) DeleteOutputCoin(ctx context.Context, req *MsgDeleteOutputCoin) (*MsgDeleteOutputCoinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOutputCoin not implemented")
}
func (*UnimplementedMsgServer) CreateCommitment(ctx context.Context, req *MsgCreateCommitment) (*MsgCreateCommitmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommitment not implemented")
}
func (*UnimplementedMsgServer) UpdateCommitment(ctx context.Context, req *MsgUpdateCommitment) (*MsgUpdateCommitmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommitment not implemented")
}
func (*UnimplementedMsgServer) DeleteCommitment(ctx context.Context, req *MsgDeleteCommitment) (*MsgDeleteCommitmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommitment not implemented")
}
func (*UnimplementedMsgServer) CreateCommitmentIndex(ctx context.Context, req *MsgCreateCommitmentIndex) (*MsgCreateCommitmentIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommitmentIndex not implemented")
}
func (*UnimplementedMsgServer) UpdateCommitmentIndex(ctx context.Context, req *MsgUpdateCommitmentIndex) (*MsgUpdateCommitmentIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCommitmentIndex not implemented")
}
func (*UnimplementedMsgServer) DeleteCommitmentIndex(ctx context.Context, req *MsgDeleteCommitmentIndex) (*MsgDeleteCommitmentIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommitmentIndex not implemented")
}
func (*UnimplementedMsgServer) CreateToken(ctx context.Context, req *MsgCreateToken) (*MsgCreateTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateToken not implemented")
}
func (*UnimplementedMsgServer) UpdateToken(ctx context.Context, req *MsgUpdateToken) (*MsgUpdateTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateToken not implemented")
}
func (*UnimplementedMsgServer) DeleteToken(ctx context.Context, req *MsgDeleteToken) (*MsgDeleteTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteToken not implemented")
}
func (*UnimplementedMsgServer) CreateOnetimeAddress(ctx context.Context, req *MsgCreateOnetimeAddress) (*MsgCreateOnetimeAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOnetimeAddress not implemented")
}
func (*UnimplementedMsgServer) UpdateOnetimeAddress(ctx context.Context, req *MsgUpdateOnetimeAddress) (*MsgUpdateOnetimeAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOnetimeAddress not implemented")
}
func (*UnimplementedMsgServer) DeleteOnetimeAddress(ctx context.Context, req *MsgDeleteOnetimeAddress) (*MsgDeleteOnetimeAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOnetimeAddress not implemented")
}
func (*UnimplementedMsgServer) CreateTx(ctx context.Context, req *MsgCreateTx) (*MsgCreateTxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTx not implemented")
}
func (*UnimplementedMsgServer) CreateTxPrivacyData(ctx context.Context, req *MsgCreateTxPrivacyData) (*MsgCreateTxPrivacyDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTxPrivacyData not implemented")
}
func (*UnimplementedMsgServer) UpdateTxPrivacyData(ctx context.Context, req *MsgUpdateTxPrivacyData) (*MsgUpdateTxPrivacyDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTxPrivacyData not implemented")
}
func (*UnimplementedMsgServer) DeleteTxPrivacyData(ctx context.Context, req *MsgDeleteTxPrivacyData) (*MsgDeleteTxPrivacyDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTxPrivacyData not implemented")
}
func (*UnimplementedMsgServer) Airdrop(ctx context.Context, req *MsgAirdrop) (*MsgAirdropResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Airdrop not implemented")
}
func (*UnimplementedMsgServer) Transfer(ctx context.Context, req *MsgTransfer) (*MsgTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Transfer not implemented")
}
func (*UnimplementedMsgServer) CreateOutputCoinSerialNumber(ctx context.Context, req *MsgCreateOutputCoinSerialNumber) (*MsgCreateOutputCoinSerialNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOutputCoinSerialNumber not implemented")
}
func (*UnimplementedMsgServer) UpdateOutputCoinSerialNumber(ctx context.Context, req *MsgUpdateOutputCoinSerialNumber) (*MsgUpdateOutputCoinSerialNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOutputCoinSerialNumber not implemented")
}
func (*UnimplementedMsgServer) DeleteOutputCoinSerialNumber(ctx context.Context, req *MsgDeleteOutputCoinSerialNumber) (*MsgDeleteOutputCoinSerialNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOutputCoinSerialNumber not implemented")
}
func (*UnimplementedMsgServer) PrivacyData(ctx context.Context, req *MsgPrivacyData) (*MsgPrivacyDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrivacyData not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateSerialNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSerialNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSerialNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateSerialNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSerialNumber(ctx, req.(*MsgCreateSerialNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSerialNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSerialNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSerialNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateSerialNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSerialNumber(ctx, req.(*MsgUpdateSerialNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSerialNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSerialNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSerialNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteSerialNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSerialNumber(ctx, req.(*MsgDeleteSerialNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateOutputCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateOutputCoin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateOutputCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateOutputCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateOutputCoin(ctx, req.(*MsgCreateOutputCoin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOutputCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOutputCoin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOutputCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateOutputCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOutputCoin(ctx, req.(*MsgUpdateOutputCoin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteOutputCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteOutputCoin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteOutputCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteOutputCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteOutputCoin(ctx, req.(*MsgDeleteOutputCoin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCommitment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCommitment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCommitment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateCommitment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCommitment(ctx, req.(*MsgCreateCommitment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateCommitment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCommitment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCommitment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateCommitment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCommitment(ctx, req.(*MsgUpdateCommitment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCommitment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCommitment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCommitment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteCommitment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCommitment(ctx, req.(*MsgDeleteCommitment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCommitmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCommitmentIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCommitmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateCommitmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCommitmentIndex(ctx, req.(*MsgCreateCommitmentIndex))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateCommitmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCommitmentIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCommitmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateCommitmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCommitmentIndex(ctx, req.(*MsgUpdateCommitmentIndex))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCommitmentIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCommitmentIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCommitmentIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteCommitmentIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCommitmentIndex(ctx, req.(*MsgDeleteCommitmentIndex))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateToken(ctx, req.(*MsgCreateToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateToken(ctx, req.(*MsgUpdateToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteToken(ctx, req.(*MsgDeleteToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateOnetimeAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateOnetimeAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateOnetimeAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateOnetimeAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateOnetimeAddress(ctx, req.(*MsgCreateOnetimeAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOnetimeAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOnetimeAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOnetimeAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateOnetimeAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOnetimeAddress(ctx, req.(*MsgUpdateOnetimeAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteOnetimeAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteOnetimeAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteOnetimeAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteOnetimeAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteOnetimeAddress(ctx, req.(*MsgDeleteOnetimeAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTx)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTx(ctx, req.(*MsgCreateTx))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTxPrivacyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTxPrivacyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTxPrivacyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateTxPrivacyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTxPrivacyData(ctx, req.(*MsgCreateTxPrivacyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTxPrivacyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTxPrivacyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTxPrivacyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateTxPrivacyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTxPrivacyData(ctx, req.(*MsgUpdateTxPrivacyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTxPrivacyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTxPrivacyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTxPrivacyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteTxPrivacyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTxPrivacyData(ctx, req.(*MsgDeleteTxPrivacyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Airdrop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAirdrop)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Airdrop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/Airdrop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Airdrop(ctx, req.(*MsgAirdrop))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Transfer(ctx, req.(*MsgTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateOutputCoinSerialNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateOutputCoinSerialNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateOutputCoinSerialNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/CreateOutputCoinSerialNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateOutputCoinSerialNumber(ctx, req.(*MsgCreateOutputCoinSerialNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOutputCoinSerialNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOutputCoinSerialNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOutputCoinSerialNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/UpdateOutputCoinSerialNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOutputCoinSerialNumber(ctx, req.(*MsgUpdateOutputCoinSerialNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteOutputCoinSerialNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteOutputCoinSerialNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteOutputCoinSerialNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/DeleteOutputCoinSerialNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteOutputCoinSerialNumber(ctx, req.(*MsgDeleteOutputCoinSerialNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PrivacyData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPrivacyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PrivacyData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/privacy.privacy.Msg/PrivacyData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PrivacyData(ctx, req.(*MsgPrivacyData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "privacy.privacy.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSerialNumber",
			Handler:    _Msg_CreateSerialNumber_Handler,
		},
		{
			MethodName: "UpdateSerialNumber",
			Handler:    _Msg_UpdateSerialNumber_Handler,
		},
		{
			MethodName: "DeleteSerialNumber",
			Handler:    _Msg_DeleteSerialNumber_Handler,
		},
		{
			MethodName: "CreateOutputCoin",
			Handler:    _Msg_CreateOutputCoin_Handler,
		},
		{
			MethodName: "UpdateOutputCoin",
			Handler:    _Msg_UpdateOutputCoin_Handler,
		},
		{
			MethodName: "DeleteOutputCoin",
			Handler:    _Msg_DeleteOutputCoin_Handler,
		},
		{
			MethodName: "CreateCommitment",
			Handler:    _Msg_CreateCommitment_Handler,
		},
		{
			MethodName: "UpdateCommitment",
			Handler:    _Msg_UpdateCommitment_Handler,
		},
		{
			MethodName: "DeleteCommitment",
			Handler:    _Msg_DeleteCommitment_Handler,
		},
		{
			MethodName: "CreateCommitmentIndex",
			Handler:    _Msg_CreateCommitmentIndex_Handler,
		},
		{
			MethodName: "UpdateCommitmentIndex",
			Handler:    _Msg_UpdateCommitmentIndex_Handler,
		},
		{
			MethodName: "DeleteCommitmentIndex",
			Handler:    _Msg_DeleteCommitmentIndex_Handler,
		},
		{
			MethodName: "CreateToken",
			Handler:    _Msg_CreateToken_Handler,
		},
		{
			MethodName: "UpdateToken",
			Handler:    _Msg_UpdateToken_Handler,
		},
		{
			MethodName: "DeleteToken",
			Handler:    _Msg_DeleteToken_Handler,
		},
		{
			MethodName: "CreateOnetimeAddress",
			Handler:    _Msg_CreateOnetimeAddress_Handler,
		},
		{
			MethodName: "UpdateOnetimeAddress",
			Handler:    _Msg_UpdateOnetimeAddress_Handler,
		},
		{
			MethodName: "DeleteOnetimeAddress",
			Handler:    _Msg_DeleteOnetimeAddress_Handler,
		},
		{
			MethodName: "CreateTx",
			Handler:    _Msg_CreateTx_Handler,
		},
		{
			MethodName: "CreateTxPrivacyData",
			Handler:    _Msg_CreateTxPrivacyData_Handler,
		},
		{
			MethodName: "UpdateTxPrivacyData",
			Handler:    _Msg_UpdateTxPrivacyData_Handler,
		},
		{
			MethodName: "DeleteTxPrivacyData",
			Handler:    _Msg_DeleteTxPrivacyData_Handler,
		},
		{
			MethodName: "Airdrop",
			Handler:    _Msg_Airdrop_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _Msg_Transfer_Handler,
		},
		{
			MethodName: "CreateOutputCoinSerialNumber",
			Handler:    _Msg_CreateOutputCoinSerialNumber_Handler,
		},
		{
			MethodName: "UpdateOutputCoinSerialNumber",
			Handler:    _Msg_UpdateOutputCoinSerialNumber_Handler,
		},
		{
			MethodName: "DeleteOutputCoinSerialNumber",
			Handler:    _Msg_DeleteOutputCoinSerialNumber_Handler,
		},
		{
			MethodName: "PrivacyData",
			Handler:    _Msg_PrivacyData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "privacy/tx.proto",
}

func (m *MsgCreateSerialNumber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSerialNumber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSerialNumber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSerialNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSerialNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSerialNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSerialNumber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSerialNumber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSerialNumber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSerialNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSerialNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSerialNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSerialNumber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSerialNumber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSerialNumber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSerialNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSerialNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSerialNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateOutputCoin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateOutputCoin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateOutputCoin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateOutputCoinResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateOutputCoinResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateOutputCoinResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOutputCoin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOutputCoin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOutputCoin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOutputCoinResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOutputCoinResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOutputCoinResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteOutputCoin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteOutputCoin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteOutputCoin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteOutputCoinResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteOutputCoinResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteOutputCoinResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCommitment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCommitment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCommitment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCommitmentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCommitmentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCommitmentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCommitment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCommitment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCommitment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCommitmentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCommitmentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCommitmentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCommitment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCommitment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCommitment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCommitmentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCommitmentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCommitmentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCommitmentIndex) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCommitmentIndex) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCommitmentIndex) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCommitmentIndexResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCommitmentIndexResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCommitmentIndexResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCommitmentIndex) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCommitmentIndex) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCommitmentIndex) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCommitmentIndexResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCommitmentIndexResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCommitmentIndexResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCommitmentIndex) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCommitmentIndex) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCommitmentIndex) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCommitmentIndexResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCommitmentIndexResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCommitmentIndexResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateOnetimeAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateOnetimeAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateOnetimeAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateOnetimeAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateOnetimeAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateOnetimeAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOnetimeAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOnetimeAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOnetimeAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOnetimeAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOnetimeAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOnetimeAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteOnetimeAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteOnetimeAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteOnetimeAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteOnetimeAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteOnetimeAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteOnetimeAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTx) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTx) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTx) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTxResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTxResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTxResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTxPrivacyData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTxPrivacyData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTxPrivacyData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTxPrivacyDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTxPrivacyDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTxPrivacyDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTxPrivacyData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTxPrivacyData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTxPrivacyData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTxPrivacyDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTxPrivacyDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTxPrivacyDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTxPrivacyData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTxPrivacyData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTxPrivacyData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTxPrivacyDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTxPrivacyDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTxPrivacyDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAirdrop) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAirdrop) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAirdrop) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OtaReceiver) > 0 {
		i -= len(m.OtaReceiver)
		copy(dAtA[i:], m.OtaReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OtaReceiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAirdropResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAirdropResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAirdropResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PaymentInfos) > 0 {
		for iNdEx := len(m.PaymentInfos) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PaymentInfos[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.PrivateKey) > 0 {
		i -= len(m.PrivateKey)
		copy(dAtA[i:], m.PrivateKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PrivateKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransfer_PaymentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransfer_PaymentInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransfer_PaymentInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Amount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Amount))
		i--
		dAtA[i] = 0x10
	}
	if len(m.PaymentAddress) > 0 {
		i -= len(m.PaymentAddress)
		copy(dAtA[i:], m.PaymentAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsError {
		i--
		if m.IsError {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateOutputCoinSerialNumber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateOutputCoinSerialNumber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateOutputCoinSerialNumber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateOutputCoinSerialNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateOutputCoinSerialNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateOutputCoinSerialNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOutputCoinSerialNumber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOutputCoinSerialNumber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOutputCoinSerialNumber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOutputCoinSerialNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOutputCoinSerialNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOutputCoinSerialNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteOutputCoinSerialNumber) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteOutputCoinSerialNumber) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteOutputCoinSerialNumber) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteOutputCoinSerialNumberResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteOutputCoinSerialNumberResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteOutputCoinSerialNumberResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPrivacyData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPrivacyData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPrivacyData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x42
	}
	if m.TxType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TxType))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Proof) > 0 {
		i -= len(m.Proof)
		copy(dAtA[i:], m.Proof)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proof)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Sig) > 0 {
		i -= len(m.Sig)
		copy(dAtA[i:], m.Sig)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sig)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SigPubKey) > 0 {
		i -= len(m.SigPubKey)
		copy(dAtA[i:], m.SigPubKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SigPubKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Fee != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Fee))
		i--
		dAtA[i] = 0x10
	}
	if m.LockTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LockTime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgPrivacyDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPrivacyDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPrivacyDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateSerialNumber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSerialNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateSerialNumber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSerialNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSerialNumber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteSerialNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateOutputCoin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateOutputCoinResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOutputCoin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateOutputCoinResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteOutputCoin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteOutputCoinResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCommitment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateCommitmentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateCommitment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateCommitmentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteCommitment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteCommitmentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCommitmentIndex) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateCommitmentIndexResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateCommitmentIndex) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateCommitmentIndexResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteCommitmentIndex) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteCommitmentIndexResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateOnetimeAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateOnetimeAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOnetimeAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateOnetimeAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteOnetimeAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteOnetimeAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTx) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTxResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTxPrivacyData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTxPrivacyDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateTxPrivacyData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTxPrivacyDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTxPrivacyData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteTxPrivacyDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAirdrop) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OtaReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAirdropResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PrivateKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PaymentInfos) > 0 {
		for _, e := range m.PaymentInfos {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgTransfer_PaymentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PaymentAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Amount != 0 {
		n += 1 + sovTx(uint64(m.Amount))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsError {
		n += 2
	}
	return n
}

func (m *MsgCreateOutputCoinSerialNumber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateOutputCoinSerialNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOutputCoinSerialNumber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateOutputCoinSerialNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteOutputCoinSerialNumber) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteOutputCoinSerialNumberResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPrivacyData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LockTime != 0 {
		n += 1 + sovTx(uint64(m.LockTime))
	}
	if m.Fee != 0 {
		n += 1 + sovTx(uint64(m.Fee))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SigPubKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sig)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Proof)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TxType != 0 {
		n += 1 + sovTx(uint64(m.TxType))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgPrivacyDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateSerialNumber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSerialNumber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSerialNumber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSerialNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSerialNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSerialNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSerialNumber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSerialNumber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSerialNumber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSerialNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSerialNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSerialNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSerialNumber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSerialNumber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSerialNumber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSerialNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSerialNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSerialNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateOutputCoin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateOutputCoin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateOutputCoin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateOutputCoinResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateOutputCoinResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateOutputCoinResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOutputCoin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOutputCoin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOutputCoin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOutputCoinResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOutputCoinResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOutputCoinResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteOutputCoin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteOutputCoin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteOutputCoin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteOutputCoinResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteOutputCoinResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteOutputCoinResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCommitment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCommitment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCommitment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCommitmentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCommitmentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCommitmentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCommitment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCommitment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCommitment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCommitmentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCommitmentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCommitmentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCommitment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCommitment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCommitment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCommitmentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCommitmentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCommitmentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCommitmentIndex) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCommitmentIndex: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCommitmentIndex: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCommitmentIndexResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCommitmentIndexResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCommitmentIndexResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCommitmentIndex) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCommitmentIndex: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCommitmentIndex: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCommitmentIndexResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCommitmentIndexResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCommitmentIndexResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCommitmentIndex) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCommitmentIndex: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCommitmentIndex: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCommitmentIndexResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCommitmentIndexResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCommitmentIndexResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateOnetimeAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateOnetimeAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateOnetimeAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateOnetimeAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateOnetimeAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateOnetimeAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOnetimeAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOnetimeAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOnetimeAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOnetimeAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOnetimeAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOnetimeAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteOnetimeAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteOnetimeAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteOnetimeAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteOnetimeAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteOnetimeAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteOnetimeAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTx) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTx: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTx: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = append(m.Value[:0], dAtA[iNdEx:postIndex]...)
			if m.Value == nil {
				m.Value = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTxResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTxResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTxResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTxPrivacyData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTxPrivacyData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTxPrivacyData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTxPrivacyDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTxPrivacyDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTxPrivacyDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTxPrivacyData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTxPrivacyData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTxPrivacyData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTxPrivacyDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTxPrivacyDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTxPrivacyDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTxPrivacyData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTxPrivacyData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTxPrivacyData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTxPrivacyDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTxPrivacyDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTxPrivacyDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAirdrop) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAirdrop: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAirdrop: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtaReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OtaReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount[:0], dAtA[iNdEx:postIndex]...)
			if m.Amount == nil {
				m.Amount = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = append(m.Info[:0], dAtA[iNdEx:postIndex]...)
			if m.Info == nil {
				m.Info = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAirdropResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAirdropResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAirdropResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivateKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrivateKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentInfos = append(m.PaymentInfos, &MsgTransfer_PaymentInfo{})
			if err := m.PaymentInfos[len(m.PaymentInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransfer_PaymentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PaymentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PaymentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			m.Amount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Amount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = append(m.Info[:0], dAtA[iNdEx:postIndex]...)
			if m.Info == nil {
				m.Info = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsError", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsError = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateOutputCoinSerialNumber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateOutputCoinSerialNumber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateOutputCoinSerialNumber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateOutputCoinSerialNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateOutputCoinSerialNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateOutputCoinSerialNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOutputCoinSerialNumber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOutputCoinSerialNumber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOutputCoinSerialNumber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOutputCoinSerialNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOutputCoinSerialNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOutputCoinSerialNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteOutputCoinSerialNumber) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteOutputCoinSerialNumber: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteOutputCoinSerialNumber: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteOutputCoinSerialNumberResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteOutputCoinSerialNumberResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteOutputCoinSerialNumberResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPrivacyData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPrivacyData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPrivacyData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockTime", wireType)
			}
			m.LockTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LockTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fee", wireType)
			}
			m.Fee = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fee |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = append(m.Info[:0], dAtA[iNdEx:postIndex]...)
			if m.Info == nil {
				m.Info = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SigPubKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SigPubKey = append(m.SigPubKey[:0], dAtA[iNdEx:postIndex]...)
			if m.SigPubKey == nil {
				m.SigPubKey = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sig", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sig = append(m.Sig[:0], dAtA[iNdEx:postIndex]...)
			if m.Sig == nil {
				m.Sig = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proof = append(m.Proof[:0], dAtA[iNdEx:postIndex]...)
			if m.Proof == nil {
				m.Proof = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxType", wireType)
			}
			m.TxType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TxType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata[:0], dAtA[iNdEx:postIndex]...)
			if m.Metadata == nil {
				m.Metadata = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPrivacyDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPrivacyDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPrivacyDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
